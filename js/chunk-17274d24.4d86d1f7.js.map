{"version":3,"sources":["webpack:///./node_modules/vue-cropperjs/dist/VueCropper.js","webpack:///./node_modules/cropperjs/dist/cropper.js"],"names":["Object","defineProperty","exports","value","_cropperjs","_cropperjs2","_interopRequireDefault","obj","__esModule","default","_objectWithoutProperties","keys","target","i","indexOf","prototype","hasOwnProperty","call","previewPropType","window","String","Array","Element","NodeList","render","h","style","this","containerStyle","ref","attrs","src","alt","on","$listeners","imgStyle","props","type","viewMode","Number","dragMode","initialAspectRatio","aspectRatio","data","preview","responsive","Boolean","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","Function","cropstart","cropmove","cropend","crop","zoom","mounted","_$options$props","$options","key","undefined","cropper","$refs","img","methods","reset","clear","initCrop","replace","url","onlyColorChanged","arguments","length","enable","disable","destroy","move","offsetX","offsetY","moveTo","x","y","relativeZoom","ratio","_originalEvent","zoomTo","rotate","degree","rotateTo","scaleX","_scaleX","scaleY","_scaleY","scale","getData","rounded","setData","getContainerData","getImageData","getCanvasData","setCanvasData","getCropBoxData","setCropBoxData","getCroppedCanvas","options","setAspectRatio","setDragMode","mode","global","factory","module","_typeof","Symbol","iterator","constructor","_classCallCheck","instance","Constructor","TypeError","_defineProperties","descriptor","enumerable","configurable","writable","_createClass","protoProps","staticProps","_defineProperty","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","source","forEach","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","isArray","_arrayLikeToArray","iter","from","o","minLen","n","toString","slice","name","test","len","arr2","IS_BROWSER","document","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_TOUCH_START","EVENT_TOUCH_MOVE","EVENT_TOUCH_END","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","MIME_TYPE_JPEG","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","NaN","TEMPLATE","isNaN","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","isPlainObject","_constructor","error","isFunction","toArray","callback","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","Math","round","REGEXP_SUFFIX","setStyle","element","styles","property","hasClass","classList","contains","className","addClass","elem","add","trim","removeClass","remove","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","dataset","getAttribute","setAttribute","removeData","removeAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","get","set","addEventListener","removeEventListener","removeListener","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","translateX","translateY","values","transform","join","WebkitTransform","msTransform","getMaxZoomRatio","pointers","pointers2","ratios","pointer","pointerId","pointer2","x1","abs","startX","y1","startY","x2","endX","y2","endY","z1","sqrt","z2","sort","a","b","getPointer","_ref2","endOnly","pageX","pageY","end","getPointersCenter","count","_ref3","getAdjustedSizes","_ref4","height","width","isValidWidth","isValidHeight","adjustedWidth","getRotatedSizes","_ref5","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getSourceCanvas","image","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","maxWidth","_ref8$maxHeight","maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","canvas","createElement","context","getContext","maxSizes","minSizes","min","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","drawImage","map","param","floor","fromCharCode","getStringFromCharCode","dataView","start","str","getUint8","REGEXP_DATA_URL_HEAD","dataURLToArrayBuffer","dataURL","base64","binary","atob","arrayBuffer","ArrayBuffer","uint8","Uint8Array","charCodeAt","arrayBufferToDataURL","mimeType","chunks","chunkSize","subarray","btoa","resetAndGetOrientation","orientation","DataView","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","parseOrientation","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","containerData","offsetWidth","offsetHeight","imageData","rotated","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","dragBox","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","pointerType","ctrlKey","action","changedTouches","touch","identifier","originalEvent","cropping","change","right","bottom","renderable","shiftKey","range","check","side","p","hasSameSize","isImg","replaced","uncreate","load","originalUrl","_this$canvasData","pivot","oldRatio","sized","widthChanged","heightChanged","HTMLCanvasElement","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","croppable","AnotherCropper","Cropper","tagName","Error","reloading","sizing","init","toDataURL","read","clone","xhr","XMLHttpRequest","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","_parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","isIOSWebKit","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild"],"mappings":"kHAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAGT,IAAIC,EAAa,EAAQ,QAErBC,EAAcC,EAAuBF,GAEzC,SAASE,EAAuBC,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEE,QAASF,GAEvF,SAASG,EAAyBH,EAAKI,GAAQ,IAAIC,EAAS,GAAI,IAAK,IAAIC,KAAKN,EAAWI,EAAKG,QAAQD,IAAM,GAAkBb,OAAOe,UAAUC,eAAeC,KAAKV,EAAKM,KAAcD,EAAOC,GAAKN,EAAIM,IAAM,OAAOD,EAEnN,IAAIM,EAAoC,qBAAXC,OAAyB,CAACC,OAAQC,OAAS,CAACD,OAAQC,MAAOC,QAASC,UAEjGrB,EAAQO,QAAU,CAChBe,OAAQ,SAAgBC,GACtB,OAAOA,EAAE,MAAO,CAAEC,MAAOC,KAAKC,gBAAkB,CAACH,EAAE,MAAO,CACxDI,IAAK,MACLC,MAAO,CACLC,IAAKJ,KAAKI,IACVC,IAAKL,KAAKK,KAAO,QACjBN,MAAO,mBAETO,GAAIN,KAAKO,WACTR,MAAOC,KAAKQ,cAIhBC,MAAO,CACLR,eAAgB5B,OAChB+B,IAAK,CACHM,KAAMjB,OACNX,QAAS,IAEXuB,IAAKZ,OACLe,SAAUnC,OAEVsC,SAAUC,OACVC,SAAUpB,OACVqB,mBAAoBF,OACpBG,YAAaH,OACbI,KAAM3C,OACN4C,QAAS1B,EACT2B,WAAY,CACVR,KAAMS,QACNrC,SAAS,GAEXsC,QAAS,CACPV,KAAMS,QACNrC,SAAS,GAEXuC,iBAAkB,CAChBX,KAAMS,QACNrC,SAAS,GAEXwC,iBAAkB,CAChBZ,KAAMS,QACNrC,SAAS,GAEXyC,MAAO,CACLb,KAAMS,QACNrC,SAAS,GAEX0C,OAAQ,CACNd,KAAMS,QACNrC,SAAS,GAEX2C,OAAQ,CACNf,KAAMS,QACNrC,SAAS,GAEX4C,UAAW,CACThB,KAAMS,QACNrC,SAAS,GAEX6C,WAAY,CACVjB,KAAMS,QACNrC,SAAS,GAEX8C,SAAU,CACRlB,KAAMS,QACNrC,SAAS,GAEX+C,aAAcjB,OACdkB,QAAS,CACPpB,KAAMS,QACNrC,SAAS,GAEXiD,UAAW,CACTrB,KAAMS,QACNrC,SAAS,GAEXkD,SAAU,CACRtB,KAAMS,QACNrC,SAAS,GAEXmD,SAAU,CACRvB,KAAMS,QACNrC,SAAS,GAEXoD,YAAa,CACXxB,KAAMS,QACNrC,SAAS,GAEXqD,YAAa,CACXzB,KAAMS,QACNrC,SAAS,GAEXsD,eAAgBxB,OAChByB,eAAgB,CACd3B,KAAMS,QACNrC,SAAS,GAEXwD,iBAAkB,CAChB5B,KAAMS,QACNrC,SAAS,GAEXyD,yBAA0B,CACxB7B,KAAMS,QACNrC,SAAS,GAGX0D,eAAgB5B,OAChB6B,gBAAiB7B,OACjB8B,gBAAiB9B,OACjB+B,iBAAkB/B,OAClBgC,kBAAmBhC,OACnBiC,mBAAoBjC,OAEpBkC,MAAOC,SACPC,UAAWD,SACXE,SAAUF,SACVG,QAASH,SACTI,KAAMJ,SACNK,KAAML,UAERM,QAAS,WACP,IAAIC,EAAkBtD,KAAKuD,SAAS9C,MAKhCO,GAJiBsC,EAAgBrD,eAC3BqD,EAAgBlD,IAChBkD,EAAgBjD,IACXiD,EAAgB9C,SACpBzB,EAAyBuE,EAAiB,CAAC,iBAAkB,MAAO,MAAO,cAElF7C,EAAQ,GAEZ,IAAK,IAAI+C,KAAOxC,OACIyC,IAAdzD,KAAKwD,KACP/C,EAAM+C,GAAOxD,KAAKwD,IAItBxD,KAAK0D,QAAU,IAAIhF,EAAYI,QAAQkB,KAAK2D,MAAMC,IAAKnD,IAGzDoD,QAAS,CACPC,MAAO,WACL,OAAO9D,KAAK0D,QAAQI,SAEtBC,MAAO,WACL,OAAO/D,KAAK0D,QAAQK,SAEtBC,SAAU,WACR,OAAOhE,KAAK0D,QAAQP,QAEtBc,QAAS,SAAiBC,GACxB,IAAIC,EAAmBC,UAAUC,OAAS,QAAsBZ,IAAjBW,UAAU,IAAmBA,UAAU,GAEtF,OAAOpE,KAAK0D,QAAQO,QAAQC,EAAKC,IAEnCG,OAAQ,WACN,OAAOtE,KAAK0D,QAAQY,UAEtBC,QAAS,WACP,OAAOvE,KAAK0D,QAAQa,WAEtBC,QAAS,WACP,OAAOxE,KAAK0D,QAAQc,WAEtBC,KAAM,SAAcC,EAASC,GAC3B,OAAO3E,KAAK0D,QAAQe,KAAKC,EAASC,IAEpCC,OAAQ,SAAgBC,GACtB,IAAIC,EAAIV,UAAUC,OAAS,QAAsBZ,IAAjBW,UAAU,GAAmBA,UAAU,GAAKS,EAE5E,OAAO7E,KAAK0D,QAAQkB,OAAOC,EAAGC,IAEhCC,aAAc,SAAsBC,EAAOC,GACzC,OAAOjF,KAAK0D,QAAQN,KAAK4B,EAAOC,IAElCC,OAAQ,SAAgBF,EAAOC,GAC7B,OAAOjF,KAAK0D,QAAQwB,OAAOF,EAAOC,IAEpCE,OAAQ,SAAgBC,GACtB,OAAOpF,KAAK0D,QAAQyB,OAAOC,IAE7BC,SAAU,SAAkBD,GAC1B,OAAOpF,KAAK0D,QAAQ2B,SAASD,IAE/BE,OAAQ,SAAgBC,GACtB,OAAOvF,KAAK0D,QAAQ4B,OAAOC,IAE7BC,OAAQ,SAAgBC,GACtB,OAAOzF,KAAK0D,QAAQ8B,OAAOC,IAE7BC,MAAO,SAAeJ,GACpB,IAAIE,EAASpB,UAAUC,OAAS,QAAsBZ,IAAjBW,UAAU,GAAmBA,UAAU,GAAKkB,EAEjF,OAAOtF,KAAK0D,QAAQgC,MAAMJ,EAAQE,IAEpCG,QAAS,WACP,IAAIC,EAAUxB,UAAUC,OAAS,QAAsBZ,IAAjBW,UAAU,IAAmBA,UAAU,GAE7E,OAAOpE,KAAK0D,QAAQiC,QAAQC,IAE9BC,QAAS,SAAiB7E,GACxB,OAAOhB,KAAK0D,QAAQmC,QAAQ7E,IAE9B8E,iBAAkB,WAChB,OAAO9F,KAAK0D,QAAQoC,oBAEtBC,aAAc,WACZ,OAAO/F,KAAK0D,QAAQqC,gBAEtBC,cAAe,WACb,OAAOhG,KAAK0D,QAAQsC,iBAEtBC,cAAe,SAAuBjF,GACpC,OAAOhB,KAAK0D,QAAQuC,cAAcjF,IAEpCkF,eAAgB,WACd,OAAOlG,KAAK0D,QAAQwC,kBAEtBC,eAAgB,SAAwBnF,GACtC,OAAOhB,KAAK0D,QAAQyC,eAAenF,IAErCoF,iBAAkB,WAChB,IAAIC,EAAUjC,UAAUC,OAAS,QAAsBZ,IAAjBW,UAAU,GAAmBA,UAAU,GAAK,GAElF,OAAOpE,KAAK0D,QAAQ0C,iBAAiBC,IAEvCC,eAAgB,SAAwBvF,GACtC,OAAOf,KAAK0D,QAAQ4C,eAAevF,IAErCwF,YAAa,SAAqBC,GAChC,OAAOxG,KAAK0D,QAAQ6C,YAAYC,O;;;;;;;;;;CC7OrC,SAAUC,EAAQC,GAC8CC,EAAOpI,QAAUmI,KADlF,CAIE1G,GAAM,WAAe,aAErB,SAAS4G,EAAQhI,GAaf,OATEgI,EADoB,oBAAXC,QAAoD,kBAApBA,OAAOC,SACtC,SAAUlI,GAClB,cAAcA,GAGN,SAAUA,GAClB,OAAOA,GAAyB,oBAAXiI,QAAyBjI,EAAImI,cAAgBF,QAAUjI,IAAQiI,OAAOzH,UAAY,gBAAkBR,GAItHgI,EAAQhI,GAGjB,SAASoI,EAAgBC,EAAUC,GACjC,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,qCAIxB,SAASC,EAAkBnI,EAAQwB,GACjC,IAAK,IAAIvB,EAAI,EAAGA,EAAIuB,EAAM4D,OAAQnF,IAAK,CACrC,IAAImI,EAAa5G,EAAMvB,GACvBmI,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDnJ,OAAOC,eAAeW,EAAQoI,EAAW7D,IAAK6D,IAIlD,SAASI,EAAaP,EAAaQ,EAAYC,GAG7C,OAFID,GAAYN,EAAkBF,EAAY9H,UAAWsI,GACrDC,GAAaP,EAAkBF,EAAaS,GACzCT,EAGT,SAASU,EAAgBhJ,EAAK4E,EAAKhF,GAYjC,OAXIgF,KAAO5E,EACTP,OAAOC,eAAeM,EAAK4E,EAAK,CAC9BhF,MAAOA,EACP8I,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZ5I,EAAI4E,GAAOhF,EAGNI,EAGT,SAASiJ,EAAQC,EAAQC,GACvB,IAAI/I,EAAOX,OAAOW,KAAK8I,GAEvB,GAAIzJ,OAAO2J,sBAAuB,CAChC,IAAIC,EAAU5J,OAAO2J,sBAAsBF,GACvCC,IAAgBE,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAO9J,OAAO+J,yBAAyBN,EAAQK,GAAKb,eAEtDtI,EAAKqJ,KAAKC,MAAMtJ,EAAMiJ,GAGxB,OAAOjJ,EAGT,SAASuJ,EAAetJ,GACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIkF,UAAUC,OAAQnF,IAAK,CACzC,IAAIsJ,EAAyB,MAAhBpE,UAAUlF,GAAakF,UAAUlF,GAAK,GAE/CA,EAAI,EACN2I,EAAQxJ,OAAOmK,IAAS,GAAMC,SAAQ,SAAUjF,GAC9CoE,EAAgB3I,EAAQuE,EAAKgF,EAAOhF,OAE7BnF,OAAOqK,0BAChBrK,OAAOsK,iBAAiB1J,EAAQZ,OAAOqK,0BAA0BF,IAEjEX,EAAQxJ,OAAOmK,IAASC,SAAQ,SAAUjF,GACxCnF,OAAOC,eAAeW,EAAQuE,EAAKnF,OAAO+J,yBAAyBI,EAAQhF,OAKjF,OAAOvE,EAGT,SAAS2J,EAAmBC,GAC1B,OAAOC,EAAmBD,IAAQE,EAAiBF,IAAQG,EAA4BH,IAAQI,IAGjG,SAASH,EAAmBD,GAC1B,GAAInJ,MAAMwJ,QAAQL,GAAM,OAAOM,EAAkBN,GAGnD,SAASE,EAAiBK,GACxB,GAAsB,qBAAXvC,QAA0BA,OAAOC,YAAYzI,OAAO+K,GAAO,OAAO1J,MAAM2J,KAAKD,GAG1F,SAASJ,EAA4BM,EAAGC,GACtC,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAOH,EAAkBG,EAAGC,GACvD,IAAIC,EAAInL,OAAOe,UAAUqK,SAASnK,KAAKgK,GAAGI,MAAM,GAAI,GAEpD,MADU,WAANF,GAAkBF,EAAEvC,cAAayC,EAAIF,EAAEvC,YAAY4C,MAC7C,QAANH,GAAqB,QAANA,EAAoB9J,MAAM2J,KAAKC,GACxC,cAANE,GAAqB,2CAA2CI,KAAKJ,GAAWL,EAAkBG,EAAGC,QAAzG,GAGF,SAASJ,EAAkBN,EAAKgB,IACnB,MAAPA,GAAeA,EAAMhB,EAAIxE,UAAQwF,EAAMhB,EAAIxE,QAE/C,IAAK,IAAInF,EAAI,EAAG4K,EAAO,IAAIpK,MAAMmK,GAAM3K,EAAI2K,EAAK3K,IAAK4K,EAAK5K,GAAK2J,EAAI3J,GAEnE,OAAO4K,EAGT,SAASb,IACP,MAAM,IAAI9B,UAAU,wIAGtB,IAAI4C,EAA+B,qBAAXvK,QAAqD,qBAApBA,OAAOwK,SAC5DC,EAASF,EAAavK,OAAS,GAC/B0K,KAAkBH,IAAcE,EAAOD,SAASG,kBAAkB,iBAAkBF,EAAOD,SAASG,gBACpGC,IAAoBL,GAAa,iBAAkBE,EACnDI,EAAY,UAEZC,EAAa,MACbC,EAAc,OACdC,EAAc,OACdC,EAAc,OACdC,EAAc,IACdC,EAAc,IACdC,EAAe,IACfC,EAAe,IACfC,EAAoB,KACpBC,EAAoB,KACpBC,EAAoB,KACpBC,EAAoB,KAEpBC,EAAa,GAAGC,OAAOd,EAAW,SAClCe,EAAiB,GAAGD,OAAOd,EAAW,aACtCgB,EAAe,GAAGF,OAAOd,EAAW,WACpCiB,EAAa,GAAGH,OAAOd,EAAW,SAClCkB,EAAkB,GAAGJ,OAAOd,EAAW,cACvCmB,EAAc,GAAGL,OAAOd,EAAW,UACnCoB,EAAa,GAAGN,OAAOd,EAAW,SAElCqB,EAAc,GAAGP,OAAOd,EAAW,UACnCsB,EAAe,GAAGR,OAAOd,EAAW,WAEpCuB,EAAiB,OACjBC,EAAiB,OACjBC,EAAiB,OAEjBC,EAAa,OACbC,EAAiB,UACjBC,EAAkB,WAClBC,EAAmB,YACnBC,EAAiB,WACjBC,EAAoBlC,EAAkB,aAAe,YACrDmC,EAAmBnC,EAAkB,YAAc,YACnDoC,EAAkBpC,EAAkB,uBAAyB,UAC7DqC,EAAqBnC,EAAoB,cAAgBgC,EACzDI,EAAqBpC,EAAoB,cAAgBiC,EACzDI,EAAmBrC,EAAoB,0BAA4BkC,EACnEI,EAAc,QACdC,GAAe,SACfC,GAAc,QACdC,GAAa,OAEbC,GAAiB,aAEjBC,GAAiB,2CACjBC,GAAkB,SAClBC,GAAuB,4BACvBC,GAAkB,gBAElBC,GAAW,CAEbxM,SAAU,EAGVE,SAAU+K,EAGV9K,mBAAoBsM,IAEpBrM,YAAaqM,IAEbpM,KAAM,KAENC,QAAS,GAETC,YAAY,EAEZE,SAAS,EAETC,kBAAkB,EAElBC,kBAAkB,EAElBC,OAAO,EAEPC,QAAQ,EAERC,QAAQ,EAERC,WAAW,EAEXC,YAAY,EAEZC,UAAU,EAEVC,aAAc,GAEdC,SAAS,EAETC,WAAW,EAEXC,UAAU,EAEVC,UAAU,EAEVC,aAAa,EAEbC,aAAa,EAEbC,eAAgB,GAEhBC,gBAAgB,EAEhBC,kBAAkB,EAElBC,0BAA0B,EAE1BC,eAAgB,EAChBC,gBAAiB,EACjBC,gBAAiB,EACjBC,iBAAkB,EAClBC,kBAAmB,IACnBC,mBAAoB,IAEpBC,MAAO,KACPE,UAAW,KACXC,SAAU,KACVC,QAAS,KACTC,KAAM,KACNC,KAAM,MAGJiK,GAAW,orCAMXC,GAAQ1M,OAAO0M,OAASrD,EAAOqD,MAOnC,SAASC,GAAS/O,GAChB,MAAwB,kBAAVA,IAAuB8O,GAAM9O,GAQ7C,IAAIgP,GAAmB,SAA0BhP,GAC/C,OAAOA,EAAQ,GAAKA,EAAQiP,KAQ9B,SAASC,GAAYlP,GACnB,MAAwB,qBAAVA,EAQhB,SAASmP,GAASnP,GAChB,MAA0B,WAAnBoI,EAAQpI,IAAiC,OAAVA,EAExC,IAAIa,GAAiBhB,OAAOe,UAAUC,eAOtC,SAASuO,GAAcpP,GACrB,IAAKmP,GAASnP,GACZ,OAAO,EAGT,IACE,IAAIqP,EAAerP,EAAMuI,YACrB3H,EAAYyO,EAAazO,UAC7B,OAAOyO,GAAgBzO,GAAaC,GAAeC,KAAKF,EAAW,iBACnE,MAAO0O,GACP,OAAO,GASX,SAASC,GAAWvP,GAClB,MAAwB,oBAAVA,EAEhB,IAAIkL,GAAQhK,MAAMN,UAAUsK,MAO5B,SAASsE,GAAQxP,GACf,OAAOkB,MAAM2J,KAAO3J,MAAM2J,KAAK7K,GAASkL,GAAMpK,KAAKd,GASrD,SAASiK,GAAQzH,EAAMiN,GAerB,OAdIjN,GAAQ+M,GAAWE,KACjBvO,MAAMwJ,QAAQlI,IAASuM,GAASvM,EAAKqD,QAGrC2J,GAAQhN,GAAMyH,SAAQ,SAAUjK,EAAOgF,GACrCyK,EAAS3O,KAAK0B,EAAMxC,EAAOgF,EAAKxC,MAEzB2M,GAAS3M,IACpB3C,OAAOW,KAAKgC,GAAMyH,SAAQ,SAAUjF,GAClCyK,EAAS3O,KAAK0B,EAAMA,EAAKwC,GAAMA,EAAKxC,OAKnCA,EAST,IAAIkN,GAAS7P,OAAO6P,QAAU,SAAgBjP,GAC5C,IAAK,IAAIkP,EAAO/J,UAAUC,OAAQ+J,EAAO,IAAI1O,MAAMyO,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IAClGD,EAAKC,EAAO,GAAKjK,UAAUiK,GAa7B,OAVIV,GAAS1O,IAAWmP,EAAK/J,OAAS,GACpC+J,EAAK3F,SAAQ,SAAU6F,GACjBX,GAASW,IACXjQ,OAAOW,KAAKsP,GAAK7F,SAAQ,SAAUjF,GACjCvE,EAAOuE,GAAO8K,EAAI9K,SAMnBvE,GAELsP,GAAkB,uBAStB,SAASC,GAAuBhQ,GAC9B,IAAIiQ,EAAQrK,UAAUC,OAAS,QAAsBZ,IAAjBW,UAAU,GAAmBA,UAAU,GAAK,KAChF,OAAOmK,GAAgB3E,KAAKpL,GAASkQ,KAAKC,MAAMnQ,EAAQiQ,GAASA,EAAQjQ,EAE3E,IAAIoQ,GAAgB,+CAOpB,SAASC,GAASC,EAASC,GACzB,IAAIhP,EAAQ+O,EAAQ/O,MACpB0I,GAAQsG,GAAQ,SAAUvQ,EAAOwQ,GAC3BJ,GAAchF,KAAKoF,IAAazB,GAAS/O,KAC3CA,EAAQ,GAAG2M,OAAO3M,EAAO,OAG3BuB,EAAMiP,GAAYxQ,KAUtB,SAASyQ,GAASH,EAAStQ,GACzB,OAAOsQ,EAAQI,UAAYJ,EAAQI,UAAUC,SAAS3Q,GAASsQ,EAAQM,UAAUjQ,QAAQX,IAAU,EAQrG,SAAS6Q,GAASP,EAAStQ,GACzB,GAAKA,EAIL,GAAI+O,GAASuB,EAAQzK,QACnBoE,GAAQqG,GAAS,SAAUQ,GACzBD,GAASC,EAAM9Q,WAKnB,GAAIsQ,EAAQI,UACVJ,EAAQI,UAAUK,IAAI/Q,OADxB,CAKA,IAAI4Q,EAAYN,EAAQM,UAAUI,OAE7BJ,EAEMA,EAAUjQ,QAAQX,GAAS,IACpCsQ,EAAQM,UAAY,GAAGjE,OAAOiE,EAAW,KAAKjE,OAAO3M,IAFrDsQ,EAAQM,UAAY5Q,GAWxB,SAASiR,GAAYX,EAAStQ,GACvBA,IAID+O,GAASuB,EAAQzK,QACnBoE,GAAQqG,GAAS,SAAUQ,GACzBG,GAAYH,EAAM9Q,MAKlBsQ,EAAQI,UACVJ,EAAQI,UAAUQ,OAAOlR,GAIvBsQ,EAAQM,UAAUjQ,QAAQX,IAAU,IACtCsQ,EAAQM,UAAYN,EAAQM,UAAUnL,QAAQzF,EAAO,MAUzD,SAASmR,GAAYb,EAAStQ,EAAOoR,GAC9BpR,IAID+O,GAASuB,EAAQzK,QACnBoE,GAAQqG,GAAS,SAAUQ,GACzBK,GAAYL,EAAM9Q,EAAOoR,MAMzBA,EACFP,GAASP,EAAStQ,GAElBiR,GAAYX,EAAStQ,IAGzB,IAAIqR,GAAoB,oBAOxB,SAASC,GAAYtR,GACnB,OAAOA,EAAMyF,QAAQ4L,GAAmB,SAASE,cASnD,SAASpK,GAAQmJ,EAASnF,GACxB,OAAIgE,GAASmB,EAAQnF,IACZmF,EAAQnF,GAGbmF,EAAQkB,QACHlB,EAAQkB,QAAQrG,GAGlBmF,EAAQmB,aAAa,QAAQ9E,OAAO2E,GAAYnG,KASzD,SAAS9D,GAAQiJ,EAASnF,EAAM3I,GAC1B2M,GAAS3M,GACX8N,EAAQnF,GAAQ3I,EACP8N,EAAQkB,QACjBlB,EAAQkB,QAAQrG,GAAQ3I,EAExB8N,EAAQoB,aAAa,QAAQ/E,OAAO2E,GAAYnG,IAAQ3I,GAS5D,SAASmP,GAAWrB,EAASnF,GAC3B,GAAIgE,GAASmB,EAAQnF,IACnB,WACSmF,EAAQnF,GACf,MAAOmE,GACPgB,EAAQnF,QAAQlG,OAEb,GAAIqL,EAAQkB,QAEjB,WACSlB,EAAQkB,QAAQrG,GACvB,MAAOmE,GACPgB,EAAQkB,QAAQrG,QAAQlG,OAG1BqL,EAAQsB,gBAAgB,QAAQjF,OAAO2E,GAAYnG,KAGvD,IAAI0G,GAAgB,QAEhBC,GAAgB,WAClB,IAAIC,GAAY,EAEhB,GAAIxG,EAAY,CACd,IAAIyG,GAAO,EAEPC,EAAW,aAEXpK,EAAUhI,OAAOC,eAAe,GAAI,OAAQ,CAC9CoS,IAAK,WAEH,OADAH,GAAY,EACLC,GAQTG,IAAK,SAAanS,GAChBgS,EAAOhS,KAGXyL,EAAO2G,iBAAiB,OAAQH,EAAUpK,GAC1C4D,EAAO4G,oBAAoB,OAAQJ,EAAUpK,GAG/C,OAAOkK,EA3BW,GAsCpB,SAASO,GAAehC,EAASpO,EAAM+P,GACrC,IAAIpK,EAAUjC,UAAUC,OAAS,QAAsBZ,IAAjBW,UAAU,GAAmBA,UAAU,GAAK,GAC9E2M,EAAUN,EACd/P,EAAK8O,OAAOwB,MAAMX,IAAe5H,SAAQ,SAAUwI,GACjD,IAAKX,GAAe,CAClB,IAAIY,EAAYpC,EAAQoC,UAEpBA,GAAaA,EAAUD,IAAUC,EAAUD,GAAOR,KACpDM,EAAUG,EAAUD,GAAOR,UACpBS,EAAUD,GAAOR,GAEqB,IAAzCpS,OAAOW,KAAKkS,EAAUD,IAAQ5M,eACzB6M,EAAUD,GAGmB,IAAlC5S,OAAOW,KAAKkS,GAAW7M,eAClByK,EAAQoC,WAKrBpC,EAAQ+B,oBAAoBI,EAAOF,EAAS1K,MAWhD,SAAS8K,GAAYrC,EAASpO,EAAM+P,GAClC,IAAIpK,EAAUjC,UAAUC,OAAS,QAAsBZ,IAAjBW,UAAU,GAAmBA,UAAU,GAAK,GAC9EgN,EAAWX,EACf/P,EAAK8O,OAAOwB,MAAMX,IAAe5H,SAAQ,SAAUwI,GACjD,GAAI5K,EAAQmK,OAASF,GAAe,CAClC,IAAIe,EAAqBvC,EAAQoC,UAC7BA,OAAmC,IAAvBG,EAAgC,GAAKA,EAErDD,EAAW,kBACFF,EAAUD,GAAOR,GACxB3B,EAAQ+B,oBAAoBI,EAAOG,EAAU/K,GAE7C,IAAK,IAAIiL,EAAQlN,UAAUC,OAAQ+J,EAAO,IAAI1O,MAAM4R,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACpFnD,EAAKmD,GAASnN,UAAUmN,GAG1Bd,EAASnI,MAAMwG,EAASV,IAGrB8C,EAAUD,KACbC,EAAUD,GAAS,IAGjBC,EAAUD,GAAOR,IACnB3B,EAAQ+B,oBAAoBI,EAAOC,EAAUD,GAAOR,GAAWpK,GAGjE6K,EAAUD,GAAOR,GAAYW,EAC7BtC,EAAQoC,UAAYA,EAGtBpC,EAAQ8B,iBAAiBK,EAAOG,EAAU/K,MAW9C,SAASmL,GAAc1C,EAASpO,EAAMM,GACpC,IAAIiQ,EAaJ,OAXIlD,GAAW0D,QAAU1D,GAAW2D,aAClCT,EAAQ,IAAIS,YAAYhR,EAAM,CAC5BiR,OAAQ3Q,EACR4Q,SAAS,EACTC,YAAY,KAGdZ,EAAQjH,SAAS8H,YAAY,eAC7Bb,EAAMc,gBAAgBrR,GAAM,GAAM,EAAMM,IAGnC8N,EAAQ0C,cAAcP,GAQ/B,SAASe,GAAUlD,GACjB,IAAImD,EAAMnD,EAAQoD,wBAClB,MAAO,CACLC,KAAMF,EAAIE,MAAQ3S,OAAO4S,YAAcpI,SAASG,gBAAgBkI,YAChEC,IAAKL,EAAIK,KAAO9S,OAAO+S,YAAcvI,SAASG,gBAAgBqI,YAGlE,IAAIC,GAAWxI,EAAOwI,SAClBC,GAAiB,gCAOrB,SAASC,GAAiBzO,GACxB,IAAI0O,EAAQ1O,EAAI2O,MAAMH,IACtB,OAAiB,OAAVE,IAAmBA,EAAM,KAAOH,GAASK,UAAYF,EAAM,KAAOH,GAASM,UAAYH,EAAM,KAAOH,GAASO,MAQtH,SAASC,GAAa/O,GACpB,IAAIgP,EAAY,aAAa/H,QAAO,IAAIgI,MAAOC,WAC/C,OAAOlP,IAA6B,IAAtBA,EAAI/E,QAAQ,KAAc,IAAM,KAAO+T,EAQvD,SAASG,GAAcC,GACrB,IAAInO,EAASmO,EAAKnO,OACdG,EAASgO,EAAKhO,OACdE,EAAS8N,EAAK9N,OACd+N,EAAaD,EAAKC,WAClBC,EAAaF,EAAKE,WAClBC,EAAS,GAETlG,GAASgG,IAA8B,IAAfA,GAC1BE,EAAOpL,KAAK,cAAc8C,OAAOoI,EAAY,QAG3ChG,GAASiG,IAA8B,IAAfA,GAC1BC,EAAOpL,KAAK,cAAc8C,OAAOqI,EAAY,QAI3CjG,GAASpI,IAAsB,IAAXA,GACtBsO,EAAOpL,KAAK,UAAU8C,OAAOhG,EAAQ,SAGnCoI,GAASjI,IAAsB,IAAXA,GACtBmO,EAAOpL,KAAK,UAAU8C,OAAO7F,EAAQ,MAGnCiI,GAAS/H,IAAsB,IAAXA,GACtBiO,EAAOpL,KAAK,UAAU8C,OAAO3F,EAAQ,MAGvC,IAAIkO,EAAYD,EAAOpP,OAASoP,EAAOE,KAAK,KAAO,OACnD,MAAO,CACLC,gBAAiBF,EACjBG,YAAaH,EACbA,UAAWA,GASf,SAASI,GAAgBC,GACvB,IAAIC,EAAYzL,EAAe,GAAIwL,GAE/BE,EAAS,GAiBb,OAhBAxL,GAAQsL,GAAU,SAAUG,EAASC,UAC5BH,EAAUG,GACjB1L,GAAQuL,GAAW,SAAUI,GAC3B,IAAIC,EAAK3F,KAAK4F,IAAIJ,EAAQK,OAASH,EAASG,QACxCC,EAAK9F,KAAK4F,IAAIJ,EAAQO,OAASL,EAASK,QACxCC,EAAKhG,KAAK4F,IAAIJ,EAAQS,KAAOP,EAASO,MACtCC,EAAKlG,KAAK4F,IAAIJ,EAAQW,KAAOT,EAASS,MACtCC,EAAKpG,KAAKqG,KAAKV,EAAKA,EAAKG,EAAKA,GAC9BQ,EAAKtG,KAAKqG,KAAKL,EAAKA,EAAKE,EAAKA,GAC9B5P,GAASgQ,EAAKF,GAAMA,EACxBb,EAAO5L,KAAKrD,SAGhBiP,EAAOgB,MAAK,SAAUC,EAAGC,GACvB,OAAOzG,KAAK4F,IAAIY,GAAKxG,KAAK4F,IAAIa,MAEzBlB,EAAO,GAShB,SAASmB,GAAWC,EAAOC,GACzB,IAAIC,EAAQF,EAAME,MACdC,EAAQH,EAAMG,MACdC,EAAM,CACRd,KAAMY,EACNV,KAAMW,GAER,OAAOF,EAAUG,EAAMlN,EAAe,CACpCgM,OAAQgB,EACRd,OAAQe,GACPC,GAQL,SAASC,GAAkB3B,GACzB,IAAIwB,EAAQ,EACRC,EAAQ,EACRG,EAAQ,EAUZ,OATAlN,GAAQsL,GAAU,SAAU6B,GAC1B,IAAIrB,EAASqB,EAAMrB,OACfE,EAASmB,EAAMnB,OACnBc,GAAShB,EACTiB,GAASf,EACTkB,GAAS,KAEXJ,GAASI,EACTH,GAASG,EACF,CACLJ,MAAOA,EACPC,MAAOA,GAUX,SAASK,GAAiBC,GAExB,IAAI/U,EAAc+U,EAAM/U,YACpBgV,EAASD,EAAMC,OACfC,EAAQF,EAAME,MACdtV,EAAO0D,UAAUC,OAAS,QAAsBZ,IAAjBW,UAAU,GAAmBA,UAAU,GAAK,UAC3E6R,EAAezI,GAAiBwI,GAChCE,EAAgB1I,GAAiBuI,GAErC,GAAIE,GAAgBC,EAAe,CACjC,IAAIC,EAAgBJ,EAAShV,EAEhB,YAATL,GAAsByV,EAAgBH,GAAkB,UAATtV,GAAoByV,EAAgBH,EACrFD,EAASC,EAAQjV,EAEjBiV,EAAQD,EAAShV,OAEVkV,EACTF,EAASC,EAAQjV,EACRmV,IACTF,EAAQD,EAAShV,GAGnB,MAAO,CACLiV,MAAOA,EACPD,OAAQA,GASZ,SAASK,GAAgBC,GACvB,IAAIL,EAAQK,EAAML,MACdD,EAASM,EAAMN,OACf3Q,EAASiR,EAAMjR,OAGnB,GAFAA,EAASsJ,KAAK4F,IAAIlP,GAAU,IAEb,KAAXA,EACF,MAAO,CACL4Q,MAAOD,EACPA,OAAQC,GAIZ,IAAIM,EAAMlR,EAAS,GAAKsJ,KAAK6H,GAAK,IAC9BC,EAAS9H,KAAK+H,IAAIH,GAClBI,EAAShI,KAAKiI,IAAIL,GAClBM,EAAWZ,EAAQU,EAASX,EAASS,EACrCK,EAAYb,EAAQQ,EAAST,EAASW,EAC1C,OAAOtR,EAAS,GAAK,CACnB4Q,MAAOa,EACPd,OAAQa,GACN,CACFZ,MAAOY,EACPb,OAAQc,GAYZ,SAASC,GAAgBC,EAAOC,EAAOC,EAAOC,GAC5C,IAAIC,EAAmBH,EAAMjW,YACzBqW,EAAoBJ,EAAMK,aAC1BC,EAAqBN,EAAMO,cAC3BC,EAAeR,EAAM7R,OACrBA,OAA0B,IAAjBqS,EAA0B,EAAIA,EACvCC,EAAeT,EAAM1R,OACrBA,OAA0B,IAAjBmS,EAA0B,EAAIA,EACvCC,EAAeV,EAAMxR,OACrBA,OAA0B,IAAjBkS,EAA0B,EAAIA,EACvC3W,EAAckW,EAAMlW,YACpBsW,EAAeJ,EAAMI,aACrBE,EAAgBN,EAAMM,cACtBI,EAAkBT,EAAMU,UACxBA,OAAgC,IAApBD,EAA6B,cAAgBA,EACzDE,EAAwBX,EAAMY,sBAC9BA,OAAkD,IAA1BD,GAA0CA,EAClEE,EAAwBb,EAAMc,sBAC9BA,OAAkD,IAA1BD,EAAmC,MAAQA,EACnEE,EAAiBf,EAAMgB,SACvBA,OAA8B,IAAnBD,EAA4BxK,IAAWwK,EAClDE,EAAkBjB,EAAMkB,UACxBA,OAAgC,IAApBD,EAA6B1K,IAAW0K,EACpDE,EAAiBnB,EAAMoB,SACvBA,OAA8B,IAAnBD,EAA4B,EAAIA,EAC3CE,EAAkBrB,EAAMsB,UACxBA,OAAgC,IAApBD,EAA6B,EAAIA,EAC7CE,EAASzO,SAAS0O,cAAc,UAChCC,EAAUF,EAAOG,WAAW,MAC5BC,EAAWhD,GAAiB,CAC9B9U,YAAaA,EACbiV,MAAOkC,EACPnC,OAAQqC,IAENU,EAAWjD,GAAiB,CAC9B9U,YAAaA,EACbiV,MAAOsC,EACPvC,OAAQyC,GACP,SACCxC,EAAQtH,KAAKqK,IAAIF,EAAS7C,MAAOtH,KAAKsK,IAAIF,EAAS9C,MAAOqB,IAC1DtB,EAASrH,KAAKqK,IAAIF,EAAS9C,OAAQrH,KAAKsK,IAAIF,EAAS/C,OAAQwB,IAG7D0B,EAAepD,GAAiB,CAClC9U,YAAaoW,EACbnB,MAAOkC,EACPnC,OAAQqC,IAENc,EAAerD,GAAiB,CAClC9U,YAAaoW,EACbnB,MAAOsC,EACPvC,OAAQyC,GACP,SACCW,EAAYzK,KAAKqK,IAAIE,EAAajD,MAAOtH,KAAKsK,IAAIE,EAAalD,MAAOoB,IACtEgC,EAAa1K,KAAKqK,IAAIE,EAAalD,OAAQrH,KAAKsK,IAAIE,EAAanD,OAAQuB,IACzE+B,EAAS,EAAEF,EAAY,GAAIC,EAAa,EAAGD,EAAWC,GAe1D,OAdAX,EAAOzC,MAAQxH,GAAuBwH,GACtCyC,EAAO1C,OAASvH,GAAuBuH,GACvC4C,EAAQW,UAAY1B,EACpBe,EAAQY,SAAS,EAAG,EAAGvD,EAAOD,GAC9B4C,EAAQa,OACRb,EAAQc,UAAUzD,EAAQ,EAAGD,EAAS,GACtC4C,EAAQxT,OAAOA,EAASuJ,KAAK6H,GAAK,KAClCoC,EAAQjT,MAAMJ,EAAQE,GACtBmT,EAAQb,sBAAwBA,EAChCa,EAAQX,sBAAwBA,EAChCW,EAAQe,UAAUpR,MAAMqQ,EAAS,CAAC5B,GAAO5L,OAAOvC,EAAmByQ,EAAOM,KAAI,SAAUC,GACtF,OAAOlL,KAAKmL,MAAMrL,GAAuBoL,UAE3CjB,EAAQvX,UACDqX,EAET,IAAIqB,GAAera,OAAOqa,aAS1B,SAASC,GAAsBC,EAAUC,EAAO5V,GAC9C,IAAI6V,EAAM,GACV7V,GAAU4V,EAEV,IAAK,IAAI/a,EAAI+a,EAAO/a,EAAImF,EAAQnF,GAAK,EACnCgb,GAAOJ,GAAaE,EAASG,SAASjb,IAGxC,OAAOgb,EAET,IAAIE,GAAuB,YAO3B,SAASC,GAAqBC,GAC5B,IAAIC,EAASD,EAAQrW,QAAQmW,GAAsB,IAC/CI,EAASC,KAAKF,GACdG,EAAc,IAAIC,YAAYH,EAAOnW,QACrCuW,EAAQ,IAAIC,WAAWH,GAI3B,OAHAjS,GAAQmS,GAAO,SAAUpc,EAAOU,GAC9B0b,EAAM1b,GAAKsb,EAAOM,WAAW5b,MAExBwb,EAST,SAASK,GAAqBL,EAAaM,GACzC,IAAIC,EAAS,GAETC,EAAY,KACZN,EAAQ,IAAIC,WAAWH,GAE3B,MAAOE,EAAMvW,OAAS,EAGpB4W,EAAO5S,KAAKyR,GAAaxR,MAAM,KAAM0F,GAAQ4M,EAAMO,SAAS,EAAGD,MAC/DN,EAAQA,EAAMO,SAASD,GAGzB,MAAO,QAAQ/P,OAAO6P,EAAU,YAAY7P,OAAOiQ,KAAKH,EAAOtH,KAAK,MAQtE,SAAS0H,GAAuBX,GAC9B,IACIY,EADAtB,EAAW,IAAIuB,SAASb,GAG5B,IACE,IAAIc,EACAC,EACAC,EAEJ,GAA6B,MAAzB1B,EAASG,SAAS,IAAwC,MAAzBH,EAASG,SAAS,GAAa,CAClE,IAAI9V,EAAS2V,EAAS2B,WAClBC,EAAS,EAEb,MAAOA,EAAS,EAAIvX,EAAQ,CAC1B,GAAkC,MAA9B2V,EAASG,SAASyB,IAAsD,MAAlC5B,EAASG,SAASyB,EAAS,GAAa,CAChFH,EAAYG,EACZ,MAGFA,GAAU,GAId,GAAIH,EAAW,CACb,IAAII,EAAaJ,EAAY,EACzBK,EAAaL,EAAY,GAE7B,GAAuD,SAAnD1B,GAAsBC,EAAU6B,EAAY,GAAe,CAC7D,IAAIE,EAAa/B,EAASgC,UAAUF,GAGpC,GAFAN,EAA8B,QAAfO,GAEXP,GAA+B,QAAfO,IAGyC,KAArD/B,EAASgC,UAAUF,EAAa,EAAGN,GAA0B,CAC/D,IAAIS,EAAiBjC,EAASkC,UAAUJ,EAAa,EAAGN,GAEpDS,GAAkB,IACpBP,EAAWI,EAAaG,KAOpC,GAAIP,EAAU,CACZ,IAEIS,EAEAjd,EAJAkd,EAAUpC,EAASgC,UAAUN,EAAUF,GAM3C,IAAKtc,EAAI,EAAGA,EAAIkd,EAASld,GAAK,EAG5B,GAFAid,EAAUT,EAAe,GAAJxc,EAAS,EAEoB,MAA9C8a,EAASgC,UAAUG,EAASX,GAE9B,CAEEW,GAAW,EAEXb,EAActB,EAASgC,UAAUG,EAASX,GAE1CxB,EAASqC,UAAUF,EAAS,EAAGX,GAC/B,QAIR,MAAO1N,GACPwN,EAAc,EAGhB,OAAOA,EAQT,SAASgB,GAAiBhB,GACxB,IAAInW,EAAS,EACTG,EAAS,EACTE,EAAS,EAEb,OAAQ8V,GAEN,KAAK,EACHhW,GAAU,EACV,MAGF,KAAK,EACHH,GAAU,IACV,MAGF,KAAK,EACHK,GAAU,EACV,MAGF,KAAK,EACHL,EAAS,GACTK,GAAU,EACV,MAGF,KAAK,EACHL,EAAS,GACT,MAGF,KAAK,EACHA,EAAS,GACTG,GAAU,EACV,MAGF,KAAK,EACHH,GAAU,GACV,MAGJ,MAAO,CACLA,OAAQA,EACRG,OAAQA,EACRE,OAAQA,GAIZ,IAAI3F,GAAS,CACXA,OAAQ,WACNG,KAAKuc,gBACLvc,KAAKwc,aACLxc,KAAKyc,cACLzc,KAAK0c,eAED1c,KAAK2c,SACP3c,KAAK4c,iBAGTL,cAAe,WACb,IAAIzN,EAAU9O,KAAK8O,QACfzI,EAAUrG,KAAKqG,QACfwW,EAAY7c,KAAK6c,UACjBnZ,EAAU1D,KAAK0D,QACnB2L,GAAS3L,EAAS2H,GAClBoE,GAAYX,EAASzD,GACrB,IAAIyR,EAAgB,CAClB9G,MAAOtH,KAAKsK,IAAI6D,EAAUE,YAAanc,OAAOyF,EAAQzD,oBAAsB,KAC5EmT,OAAQrH,KAAKsK,IAAI6D,EAAUG,aAAcpc,OAAOyF,EAAQxD,qBAAuB,MAEjF7C,KAAK8c,cAAgBA,EACrBjO,GAASnL,EAAS,CAChBsS,MAAO8G,EAAc9G,MACrBD,OAAQ+G,EAAc/G,SAExB1G,GAASP,EAASzD,GAClBoE,GAAY/L,EAAS2H,IAGvBmR,WAAY,WACV,IAAIM,EAAgB9c,KAAK8c,cACrBG,EAAYjd,KAAKid,UACjBtc,EAAWX,KAAKqG,QAAQ1F,SACxBuc,EAAUxO,KAAK4F,IAAI2I,EAAU9X,QAAU,MAAQ,GAC/CkS,EAAe6F,EAAUD,EAAU1F,cAAgB0F,EAAU5F,aAC7DE,EAAgB2F,EAAUD,EAAU5F,aAAe4F,EAAU1F,cAC7DxW,EAAcsW,EAAeE,EAC7B4F,EAAcL,EAAc9G,MAC5BoH,EAAeN,EAAc/G,OAE7B+G,EAAc/G,OAAShV,EAAc+b,EAAc9G,MACpC,IAAbrV,EACFwc,EAAcL,EAAc/G,OAAShV,EAErCqc,EAAeN,EAAc9G,MAAQjV,EAEjB,IAAbJ,EACTyc,EAAeN,EAAc9G,MAAQjV,EAErCoc,EAAcL,EAAc/G,OAAShV,EAGvC,IAAIsc,EAAa,CACftc,YAAaA,EACbsW,aAAcA,EACdE,cAAeA,EACfvB,MAAOmH,EACPpH,OAAQqH,GAEVC,EAAWlL,MAAQ2K,EAAc9G,MAAQmH,GAAe,EACxDE,EAAW/K,KAAOwK,EAAc/G,OAASqH,GAAgB,EACzDC,EAAWC,QAAUD,EAAWlL,KAChCkL,EAAWE,OAASF,EAAW/K,IAC/BtS,KAAKqd,WAAaA,EAClBrd,KAAKwd,QAAuB,IAAb7c,GAA+B,IAAbA,EACjCX,KAAKyd,aAAY,GAAM,GACvBzd,KAAK0d,iBAAmBxP,GAAO,GAAI+O,GACnCjd,KAAK2d,kBAAoBzP,GAAO,GAAImP,IAEtCI,YAAa,SAAqBG,EAAaC,GAC7C,IAAIxX,EAAUrG,KAAKqG,QACfyW,EAAgB9c,KAAK8c,cACrBO,EAAard,KAAKqd,WAClBS,EAAc9d,KAAK8d,YACnBnd,EAAW0F,EAAQ1F,SACnBI,EAAcsc,EAAWtc,YACzB4b,EAAU3c,KAAK2c,SAAWmB,EAE9B,GAAIF,EAAa,CACf,IAAIpb,EAAiB5B,OAAOyF,EAAQ7D,iBAAmB,EACnDC,EAAkB7B,OAAOyF,EAAQ5D,kBAAoB,EAErD9B,EAAW,GACb6B,EAAiBkM,KAAKsK,IAAIxW,EAAgBsa,EAAc9G,OACxDvT,EAAkBiM,KAAKsK,IAAIvW,EAAiBqa,EAAc/G,QAEzC,IAAbpV,IACE8B,EAAkB1B,EAAcyB,EAClCA,EAAiBC,EAAkB1B,EAEnC0B,EAAkBD,EAAiBzB,IAG9BJ,EAAW,IAChB6B,EACFA,EAAiBkM,KAAKsK,IAAIxW,EAAgBma,EAAUmB,EAAY9H,MAAQ,GAC/DvT,EACTA,EAAkBiM,KAAKsK,IAAIvW,EAAiBka,EAAUmB,EAAY/H,OAAS,GAClE4G,IACTna,EAAiBsb,EAAY9H,MAC7BvT,EAAkBqb,EAAY/H,OAE1BtT,EAAkB1B,EAAcyB,EAClCA,EAAiBC,EAAkB1B,EAEnC0B,EAAkBD,EAAiBzB,IAKzC,IAAIgd,EAAoBlI,GAAiB,CACvC9U,YAAaA,EACbiV,MAAOxT,EACPuT,OAAQtT,IAGVD,EAAiBub,EAAkB/H,MACnCvT,EAAkBsb,EAAkBhI,OACpCsH,EAAW/E,SAAW9V,EACtB6a,EAAW7E,UAAY/V,EACvB4a,EAAWnF,SAAWzK,IACtB4P,EAAWjF,UAAY3K,IAGzB,GAAIoQ,EACF,GAAIld,GAAYgc,EAAU,EAAI,GAAI,CAChC,IAAIqB,EAAgBlB,EAAc9G,MAAQqH,EAAWrH,MACjDiI,EAAenB,EAAc/G,OAASsH,EAAWtH,OACrDsH,EAAWa,QAAUxP,KAAKqK,IAAI,EAAGiF,GACjCX,EAAWc,OAASzP,KAAKqK,IAAI,EAAGkF,GAChCZ,EAAWe,QAAU1P,KAAKsK,IAAI,EAAGgF,GACjCX,EAAWgB,OAAS3P,KAAKsK,IAAI,EAAGiF,GAE5BtB,GAAW3c,KAAKwd,UAClBH,EAAWa,QAAUxP,KAAKqK,IAAI+E,EAAY3L,KAAM2L,EAAY3L,MAAQ2L,EAAY9H,MAAQqH,EAAWrH,QACnGqH,EAAWc,OAASzP,KAAKqK,IAAI+E,EAAYxL,IAAKwL,EAAYxL,KAAOwL,EAAY/H,OAASsH,EAAWtH,SACjGsH,EAAWe,QAAUN,EAAY3L,KACjCkL,EAAWgB,OAASP,EAAYxL,IAEf,IAAb3R,IACE0c,EAAWrH,OAAS8G,EAAc9G,QACpCqH,EAAWa,QAAUxP,KAAKqK,IAAI,EAAGiF,GACjCX,EAAWe,QAAU1P,KAAKsK,IAAI,EAAGgF,IAG/BX,EAAWtH,QAAU+G,EAAc/G,SACrCsH,EAAWc,OAASzP,KAAKqK,IAAI,EAAGkF,GAChCZ,EAAWgB,OAAS3P,KAAKsK,IAAI,EAAGiF,WAKtCZ,EAAWa,SAAWb,EAAWrH,MACjCqH,EAAWc,QAAUd,EAAWtH,OAChCsH,EAAWe,QAAUtB,EAAc9G,MACnCqH,EAAWgB,OAASvB,EAAc/G,QAIxC2G,aAAc,SAAsB4B,EAASC,GAC3C,IAAIlB,EAAard,KAAKqd,WAClBJ,EAAYjd,KAAKid,UAErB,GAAIsB,EAAa,CACf,IAAIC,EAAmBpI,GAAgB,CACrCJ,MAAOiH,EAAU5F,aAAe3I,KAAK4F,IAAI2I,EAAU3X,QAAU,GAC7DyQ,OAAQkH,EAAU1F,cAAgB7I,KAAK4F,IAAI2I,EAAUzX,QAAU,GAC/DJ,OAAQ6X,EAAU9X,QAAU,IAE1BkS,EAAemH,EAAiBxI,MAChCuB,EAAgBiH,EAAiBzI,OAEjCC,EAAQqH,EAAWrH,OAASqB,EAAegG,EAAWhG,cACtDtB,EAASsH,EAAWtH,QAAUwB,EAAgB8F,EAAW9F,eAC7D8F,EAAWlL,OAAS6D,EAAQqH,EAAWrH,OAAS,EAChDqH,EAAW/K,MAAQyD,EAASsH,EAAWtH,QAAU,EACjDsH,EAAWrH,MAAQA,EACnBqH,EAAWtH,OAASA,EACpBsH,EAAWtc,YAAcsW,EAAeE,EACxC8F,EAAWhG,aAAeA,EAC1BgG,EAAW9F,cAAgBA,EAC3BvX,KAAKyd,aAAY,GAAM,IAGrBJ,EAAWrH,MAAQqH,EAAWnF,UAAYmF,EAAWrH,MAAQqH,EAAW/E,YAC1E+E,EAAWlL,KAAOkL,EAAWC,UAG3BD,EAAWtH,OAASsH,EAAWjF,WAAaiF,EAAWtH,OAASsH,EAAW7E,aAC7E6E,EAAW/K,IAAM+K,EAAWE,QAG9BF,EAAWrH,MAAQtH,KAAKqK,IAAIrK,KAAKsK,IAAIqE,EAAWrH,MAAOqH,EAAW/E,UAAW+E,EAAWnF,UACxFmF,EAAWtH,OAASrH,KAAKqK,IAAIrK,KAAKsK,IAAIqE,EAAWtH,OAAQsH,EAAW7E,WAAY6E,EAAWjF,WAC3FpY,KAAKyd,aAAY,GAAO,GACxBJ,EAAWlL,KAAOzD,KAAKqK,IAAIrK,KAAKsK,IAAIqE,EAAWlL,KAAMkL,EAAWa,SAAUb,EAAWe,SACrFf,EAAW/K,IAAM5D,KAAKqK,IAAIrK,KAAKsK,IAAIqE,EAAW/K,IAAK+K,EAAWc,QAASd,EAAWgB,QAClFhB,EAAWC,QAAUD,EAAWlL,KAChCkL,EAAWE,OAASF,EAAW/K,IAC/BzD,GAAS7O,KAAKyY,OAAQvK,GAAO,CAC3B8H,MAAOqH,EAAWrH,MAClBD,OAAQsH,EAAWtH,QAClB1C,GAAc,CACfE,WAAY8J,EAAWlL,KACvBqB,WAAY6J,EAAW/K,QAEzBtS,KAAKye,YAAYH,GAEbte,KAAK2c,SAAW3c,KAAKwd,SACvBxd,KAAK0e,cAAa,GAAM,IAG5BD,YAAa,SAAqBH,GAChC,IAAIjB,EAAard,KAAKqd,WAClBJ,EAAYjd,KAAKid,UACjBjH,EAAQiH,EAAU5F,cAAgBgG,EAAWrH,MAAQqH,EAAWhG,cAChEtB,EAASkH,EAAU1F,eAAiB8F,EAAWtH,OAASsH,EAAW9F,eACvErJ,GAAO+O,EAAW,CAChBjH,MAAOA,EACPD,OAAQA,EACR5D,MAAOkL,EAAWrH,MAAQA,GAAS,EACnC1D,KAAM+K,EAAWtH,OAASA,GAAU,IAEtClH,GAAS7O,KAAK+W,MAAO7I,GAAO,CAC1B8H,MAAOiH,EAAUjH,MACjBD,OAAQkH,EAAUlH,QACjB1C,GAAcnF,GAAO,CACtBqF,WAAY0J,EAAU9K,KACtBqB,WAAYyJ,EAAU3K,KACrB2K,MAECqB,GACFte,KAAK2e,UAGTlC,YAAa,WACX,IAAIpW,EAAUrG,KAAKqG,QACfgX,EAAard,KAAKqd,WAClBtc,EAAcsF,EAAQtF,aAAesF,EAAQvF,mBAC7Ce,EAAejB,OAAOyF,EAAQxE,eAAiB,GAC/Cic,EAAc,CAChB9H,MAAOqH,EAAWrH,MAClBD,OAAQsH,EAAWtH,QAGjBhV,IACEsc,EAAWtH,OAAShV,EAAcsc,EAAWrH,MAC/C8H,EAAY/H,OAAS+H,EAAY9H,MAAQjV,EAEzC+c,EAAY9H,MAAQ8H,EAAY/H,OAAShV,GAI7Cf,KAAK8d,YAAcA,EACnB9d,KAAK0e,cAAa,GAAM,GAExBZ,EAAY9H,MAAQtH,KAAKqK,IAAIrK,KAAKsK,IAAI8E,EAAY9H,MAAO8H,EAAYxF,UAAWwF,EAAY5F,UAC5F4F,EAAY/H,OAASrH,KAAKqK,IAAIrK,KAAKsK,IAAI8E,EAAY/H,OAAQ+H,EAAYtF,WAAYsF,EAAY1F,WAE/F0F,EAAY9H,MAAQtH,KAAKsK,IAAI8E,EAAYxF,SAAUwF,EAAY9H,MAAQnU,GACvEic,EAAY/H,OAASrH,KAAKsK,IAAI8E,EAAYtF,UAAWsF,EAAY/H,OAASlU,GAC1Eic,EAAY3L,KAAOkL,EAAWlL,MAAQkL,EAAWrH,MAAQ8H,EAAY9H,OAAS,EAC9E8H,EAAYxL,IAAM+K,EAAW/K,KAAO+K,EAAWtH,OAAS+H,EAAY/H,QAAU,EAC9E+H,EAAYR,QAAUQ,EAAY3L,KAClC2L,EAAYP,OAASO,EAAYxL,IACjCtS,KAAK4e,mBAAqB1Q,GAAO,GAAI4P,IAEvCY,aAAc,SAAsBd,EAAaC,GAC/C,IAAIxX,EAAUrG,KAAKqG,QACfyW,EAAgB9c,KAAK8c,cACrBO,EAAard,KAAKqd,WAClBS,EAAc9d,KAAK8d,YACnBN,EAAUxd,KAAKwd,QACfzc,EAAcsF,EAAQtF,YAE1B,GAAI6c,EAAa,CACf,IAAIlb,EAAkB9B,OAAOyF,EAAQ3D,kBAAoB,EACrDC,EAAmB/B,OAAOyF,EAAQ1D,mBAAqB,EACvDkc,EAAkBrB,EAAU9O,KAAKqK,IAAI+D,EAAc9G,MAAOqH,EAAWrH,MAAOqH,EAAWrH,MAAQqH,EAAWlL,KAAM2K,EAAc9G,MAAQqH,EAAWlL,MAAQ2K,EAAc9G,MACvK8I,EAAmBtB,EAAU9O,KAAKqK,IAAI+D,EAAc/G,OAAQsH,EAAWtH,OAAQsH,EAAWtH,OAASsH,EAAW/K,IAAKwK,EAAc/G,OAASsH,EAAW/K,KAAOwK,EAAc/G,OAE9KrT,EAAkBgM,KAAKqK,IAAIrW,EAAiBoa,EAAc9G,OAC1DrT,EAAmB+L,KAAKqK,IAAIpW,EAAkBma,EAAc/G,QAExDhV,IACE2B,GAAmBC,EACjBA,EAAmB5B,EAAc2B,EACnCC,EAAmBD,EAAkB3B,EAErC2B,EAAkBC,EAAmB5B,EAE9B2B,EACTC,EAAmBD,EAAkB3B,EAC5B4B,IACTD,EAAkBC,EAAmB5B,GAGnC+d,EAAmB/d,EAAc8d,EACnCC,EAAmBD,EAAkB9d,EAErC8d,EAAkBC,EAAmB/d,GAKzC+c,EAAYxF,SAAW5J,KAAKqK,IAAIrW,EAAiBmc,GACjDf,EAAYtF,UAAY9J,KAAKqK,IAAIpW,EAAkBmc,GACnDhB,EAAY5F,SAAW2G,EACvBf,EAAY1F,UAAY0G,EAGtBjB,IACEL,GACFM,EAAYI,QAAUxP,KAAKsK,IAAI,EAAGqE,EAAWlL,MAC7C2L,EAAYK,OAASzP,KAAKsK,IAAI,EAAGqE,EAAW/K,KAC5CwL,EAAYM,QAAU1P,KAAKqK,IAAI+D,EAAc9G,MAAOqH,EAAWlL,KAAOkL,EAAWrH,OAAS8H,EAAY9H,MACtG8H,EAAYO,OAAS3P,KAAKqK,IAAI+D,EAAc/G,OAAQsH,EAAW/K,IAAM+K,EAAWtH,QAAU+H,EAAY/H,SAEtG+H,EAAYI,QAAU,EACtBJ,EAAYK,OAAS,EACrBL,EAAYM,QAAUtB,EAAc9G,MAAQ8H,EAAY9H,MACxD8H,EAAYO,OAASvB,EAAc/G,OAAS+H,EAAY/H,UAI9D6G,cAAe,WACb,IAAIvW,EAAUrG,KAAKqG,QACfyW,EAAgB9c,KAAK8c,cACrBgB,EAAc9d,KAAK8d,aAEnBA,EAAY9H,MAAQ8H,EAAY5F,UAAY4F,EAAY9H,MAAQ8H,EAAYxF,YAC9EwF,EAAY3L,KAAO2L,EAAYR,UAG7BQ,EAAY/H,OAAS+H,EAAY1F,WAAa0F,EAAY/H,OAAS+H,EAAYtF,aACjFsF,EAAYxL,IAAMwL,EAAYP,QAGhCO,EAAY9H,MAAQtH,KAAKqK,IAAIrK,KAAKsK,IAAI8E,EAAY9H,MAAO8H,EAAYxF,UAAWwF,EAAY5F,UAC5F4F,EAAY/H,OAASrH,KAAKqK,IAAIrK,KAAKsK,IAAI8E,EAAY/H,OAAQ+H,EAAYtF,WAAYsF,EAAY1F,WAC/FpY,KAAK0e,cAAa,GAAO,GACzBZ,EAAY3L,KAAOzD,KAAKqK,IAAIrK,KAAKsK,IAAI8E,EAAY3L,KAAM2L,EAAYI,SAAUJ,EAAYM,SACzFN,EAAYxL,IAAM5D,KAAKqK,IAAIrK,KAAKsK,IAAI8E,EAAYxL,IAAKwL,EAAYK,QAASL,EAAYO,QACtFP,EAAYR,QAAUQ,EAAY3L,KAClC2L,EAAYP,OAASO,EAAYxL,IAE7BjM,EAAQvE,SAAWuE,EAAQhE,gBAE7BwD,GAAQ7F,KAAK+e,KAAMrT,EAAaoS,EAAY9H,OAAS8G,EAAc9G,OAAS8H,EAAY/H,QAAU+G,EAAc/G,OAASvL,EAAcF,GAGzIuE,GAAS7O,KAAKgf,QAAS9Q,GAAO,CAC5B8H,MAAO8H,EAAY9H,MACnBD,OAAQ+H,EAAY/H,QACnB1C,GAAc,CACfE,WAAYuK,EAAY3L,KACxBqB,WAAYsK,EAAYxL,QAGtBtS,KAAK2c,SAAW3c,KAAKwd,SACvBxd,KAAKyd,aAAY,GAAM,GAGpBzd,KAAKif,UACRjf,KAAK2e,UAGTA,OAAQ,WACN3e,KAAKiB,UACLuQ,GAAcxR,KAAK8O,QAAS/C,EAAY/L,KAAK2F,aAI7C1E,GAAU,CACZie,YAAa,WACX,IAAIpQ,EAAU9O,KAAK8O,QACfqQ,EAAcnf,KAAKmf,YACnBle,EAAUjB,KAAKqG,QAAQpF,QACvBiD,EAAMib,EAAcnf,KAAKof,eAAiBpf,KAAKkE,IAC/C7D,EAAMyO,EAAQzO,KAAO,uBACrB0W,EAAQ/M,SAAS0O,cAAc,OAWnC,GATIyG,IACFpI,EAAMoI,YAAcA,GAGtBpI,EAAM3W,IAAM8D,EACZ6S,EAAM1W,IAAMA,EACZL,KAAKqf,QAAQC,YAAYvI,GACzB/W,KAAKuf,aAAexI,EAEf9V,EAAL,CAIA,IAAIue,EAAWve,EAEQ,kBAAZA,EACTue,EAAW1Q,EAAQ2Q,cAAcC,iBAAiBze,GACzCA,EAAQ0e,gBACjBH,EAAW,CAACve,IAGdjB,KAAKwf,SAAWA,EAChB/W,GAAQ+W,GAAU,SAAUI,GAC1B,IAAIhc,EAAMoG,SAAS0O,cAAc,OAEjC7S,GAAQ+Z,EAAIjU,EAAc,CACxBqK,MAAO4J,EAAG7C,YACVhH,OAAQ6J,EAAG5C,aACX6C,KAAMD,EAAGE,YAGPX,IACFvb,EAAIub,YAAcA,GAGpBvb,EAAIxD,IAAM8D,EACVN,EAAIvD,IAAMA,EAQVuD,EAAI7D,MAAMggB,QAAU,0KACpBH,EAAGE,UAAY,GACfF,EAAGN,YAAY1b,QAGnBoc,aAAc,WACZvX,GAAQzI,KAAKwf,UAAU,SAAU1Q,GAC/B,IAAI9N,EAAO2E,GAAQmJ,EAASnD,GAC5BkD,GAASC,EAAS,CAChBkH,MAAOhV,EAAKgV,MACZD,OAAQ/U,EAAK+U,SAEfjH,EAAQgR,UAAY9e,EAAK6e,KACzB1P,GAAWrB,EAASnD,OAGxB1K,QAAS,WACP,IAAIgc,EAAYjd,KAAKid,UACjBI,EAAard,KAAKqd,WAClBS,EAAc9d,KAAK8d,YACnBmC,EAAenC,EAAY9H,MAC3BkK,EAAgBpC,EAAY/H,OAC5BC,EAAQiH,EAAUjH,MAClBD,EAASkH,EAAUlH,OACnB5D,EAAO2L,EAAY3L,KAAOkL,EAAWlL,KAAO8K,EAAU9K,KACtDG,EAAMwL,EAAYxL,IAAM+K,EAAW/K,IAAM2K,EAAU3K,IAElDtS,KAAK2c,UAAW3c,KAAKif,WAI1BpQ,GAAS7O,KAAKuf,aAAcrR,GAAO,CACjC8H,MAAOA,EACPD,OAAQA,GACP1C,GAAcnF,GAAO,CACtBqF,YAAapB,EACbqB,YAAalB,GACZ2K,MACHxU,GAAQzI,KAAKwf,UAAU,SAAU1Q,GAC/B,IAAI9N,EAAO2E,GAAQmJ,EAASnD,GACxBwU,EAAgBnf,EAAKgV,MACrBoK,EAAiBpf,EAAK+U,OACtBa,EAAWuJ,EACXtJ,EAAYuJ,EACZpb,EAAQ,EAERib,IACFjb,EAAQmb,EAAgBF,EACxBpJ,EAAYqJ,EAAgBlb,GAG1Bkb,GAAiBrJ,EAAYuJ,IAC/Bpb,EAAQob,EAAiBF,EACzBtJ,EAAWqJ,EAAejb,EAC1B6R,EAAYuJ,GAGdvR,GAASC,EAAS,CAChBkH,MAAOY,EACPb,OAAQc,IAEVhI,GAASC,EAAQuR,qBAAqB,OAAO,GAAInS,GAAO,CACtD8H,MAAOA,EAAQhR,EACf+Q,OAAQA,EAAS/Q,GAChBqO,GAAcnF,GAAO,CACtBqF,YAAapB,EAAOnN,EACpBwO,YAAalB,EAAMtN,GAClBiY,YAKLqD,GAAS,CACXC,KAAM,WACJ,IAAIzR,EAAU9O,KAAK8O,QACfzI,EAAUrG,KAAKqG,QACf3C,EAAU1D,KAAK0D,QAEfqK,GAAW1H,EAAQrD,YACrBmO,GAAYrC,EAAS5C,EAAkB7F,EAAQrD,WAG7C+K,GAAW1H,EAAQpD,WACrBkO,GAAYrC,EAAS7C,EAAiB5F,EAAQpD,UAG5C8K,GAAW1H,EAAQnD,UACrBiO,GAAYrC,EAAS9C,EAAgB3F,EAAQnD,SAG3C6K,GAAW1H,EAAQlD,OACrBgO,GAAYrC,EAAS/C,EAAY1F,EAAQlD,MAGvC4K,GAAW1H,EAAQjD,OACrB+N,GAAYrC,EAASjC,GAAYxG,EAAQjD,MAG3C+N,GAAYzN,EAAS6I,EAAoBvM,KAAKwgB,YAAcxgB,KAAKygB,UAAUF,KAAKvgB,OAE5EqG,EAAQpE,UAAYoE,EAAQlE,aAC9BgP,GAAYzN,EAASkJ,GAAa5M,KAAK0gB,QAAU1gB,KAAK2gB,MAAMJ,KAAKvgB,MAAO,CACtE4gB,SAAS,EACTC,SAAS,IAITxa,EAAQ9D,0BACV4O,GAAYzN,EAASyI,EAAgBnM,KAAK8gB,WAAa9gB,KAAK+gB,SAASR,KAAKvgB,OAG5EmR,GAAYrC,EAAQ2Q,cAAejT,EAAoBxM,KAAKghB,WAAahhB,KAAKihB,SAASV,KAAKvgB,OAC5FmR,GAAYrC,EAAQ2Q,cAAehT,EAAkBzM,KAAKkhB,UAAYlhB,KAAKmhB,QAAQZ,KAAKvgB,OAEpFqG,EAAQnF,YACViQ,GAAY3R,OAAQmN,GAAc3M,KAAKohB,SAAWphB,KAAKqhB,OAAOd,KAAKvgB,QAGvEshB,OAAQ,WACN,IAAIxS,EAAU9O,KAAK8O,QACfzI,EAAUrG,KAAKqG,QACf3C,EAAU1D,KAAK0D,QAEfqK,GAAW1H,EAAQrD,YACrB8N,GAAehC,EAAS5C,EAAkB7F,EAAQrD,WAGhD+K,GAAW1H,EAAQpD,WACrB6N,GAAehC,EAAS7C,EAAiB5F,EAAQpD,UAG/C8K,GAAW1H,EAAQnD,UACrB4N,GAAehC,EAAS9C,EAAgB3F,EAAQnD,SAG9C6K,GAAW1H,EAAQlD,OACrB2N,GAAehC,EAAS/C,EAAY1F,EAAQlD,MAG1C4K,GAAW1H,EAAQjD,OACrB0N,GAAehC,EAASjC,GAAYxG,EAAQjD,MAG9C0N,GAAepN,EAAS6I,EAAoBvM,KAAKwgB,aAE7Cna,EAAQpE,UAAYoE,EAAQlE,aAC9B2O,GAAepN,EAASkJ,GAAa5M,KAAK0gB,QAAS,CACjDE,SAAS,EACTC,SAAS,IAITxa,EAAQ9D,0BACVuO,GAAepN,EAASyI,EAAgBnM,KAAK8gB,YAG/ChQ,GAAehC,EAAQ2Q,cAAejT,EAAoBxM,KAAKghB,YAC/DlQ,GAAehC,EAAQ2Q,cAAehT,EAAkBzM,KAAKkhB,WAEzD7a,EAAQnF,YACV4P,GAAetR,OAAQmN,GAAc3M,KAAKohB,YAK5CG,GAAW,CACbF,OAAQ,WACN,IAAIrhB,KAAKif,SAAT,CAIA,IAMM5B,EACAS,EAPFzX,EAAUrG,KAAKqG,QACfwW,EAAY7c,KAAK6c,UACjBC,EAAgB9c,KAAK8c,cACrB9X,EAAQ6X,EAAUE,YAAcD,EAAc9G,MAElD,GAAc,IAAVhR,GAAe6X,EAAUG,eAAiBF,EAAc/G,OAItD1P,EAAQjF,UACVic,EAAard,KAAKgG,gBAClB8X,EAAc9d,KAAKkG,kBAGrBlG,KAAKH,SAEDwG,EAAQjF,UACVpB,KAAKiG,cAAcwC,GAAQ4U,GAAY,SAAU7T,EAAGtK,GAClDme,EAAWne,GAAKsK,EAAIxE,MAEtBhF,KAAKmG,eAAesC,GAAQqV,GAAa,SAAUtU,EAAGtK,GACpD4e,EAAY5e,GAAKsK,EAAIxE,SAK7B+b,SAAU,WACJ/gB,KAAKif,UAAYjf,KAAKqG,QAAQxF,WAAaiL,GAI/C9L,KAAKuG,YAAY0I,GAASjP,KAAKwhB,QAAStW,GAAcW,EAAiBD,IAEzE+U,MAAO,SAAe1P,GACpB,IAAIwQ,EAAQzhB,KAERgF,EAAQpE,OAAOZ,KAAKqG,QAAQjE,iBAAmB,GAC/Csf,EAAQ,EAER1hB,KAAKif,WAIThO,EAAM0Q,iBAEF3hB,KAAK4hB,WAIT5hB,KAAK4hB,UAAW,EAChBC,YAAW,WACTJ,EAAMG,UAAW,IAChB,IAEC3Q,EAAM6Q,OACRJ,EAAQzQ,EAAM6Q,OAAS,EAAI,GAAK,EACvB7Q,EAAM8Q,WACfL,GAASzQ,EAAM8Q,WAAa,IACnB9Q,EAAMU,SACf+P,EAAQzQ,EAAMU,OAAS,EAAI,GAAK,GAGlC3R,KAAKoD,MAAMse,EAAQ1c,EAAOiM,MAE5BwP,UAAW,SAAmBxP,GAC5B,IAAI+Q,EAAU/Q,EAAM+Q,QAChBC,EAAShR,EAAMgR,OAEnB,KAAIjiB,KAAKif,WACU,cAAfhO,EAAMvQ,MAAuC,gBAAfuQ,EAAMvQ,MAAgD,UAAtBuQ,EAAMiR,eACxE3U,GAASyU,IAAwB,IAAZA,GAAiBzU,GAAS0U,IAAsB,IAAXA,GACvDhR,EAAMkR,UAHT,CAOA,IAEIC,EAFA/b,EAAUrG,KAAKqG,QACf0N,EAAW/T,KAAK+T,SAGhB9C,EAAMoR,eAER5Z,GAAQwI,EAAMoR,gBAAgB,SAAUC,GACtCvO,EAASuO,EAAMC,YAAcnN,GAAWkN,MAI1CvO,EAAS9C,EAAMkD,WAAa,GAAKiB,GAAWnE,GAI5CmR,EADE/jB,OAAOW,KAAK+U,GAAU1P,OAAS,GAAKgC,EAAQpE,UAAYoE,EAAQnE,YACzDuI,EAEA9E,GAAQsL,EAAMhS,OAAQyM,GAG5BqB,GAAenD,KAAKwY,KAOlB,IAHH5Q,GAAcxR,KAAK8O,QAAS5C,EAAkB,CAChDsW,cAAevR,EACfmR,OAAQA,MAMVnR,EAAM0Q,iBACN3hB,KAAKoiB,OAASA,EACdpiB,KAAKyiB,UAAW,EAEZL,IAAW7X,IACbvK,KAAKyiB,UAAW,EAChBpT,GAASrP,KAAKwhB,QAAShW,OAG3ByV,SAAU,SAAkBhQ,GAC1B,IAAImR,EAASpiB,KAAKoiB,OAElB,IAAIpiB,KAAKif,UAAamD,EAAtB,CAIA,IAAIrO,EAAW/T,KAAK+T,SACpB9C,EAAM0Q,kBAKC,IAHHnQ,GAAcxR,KAAK8O,QAAS7C,EAAiB,CAC/CuW,cAAevR,EACfmR,OAAQA,MAKNnR,EAAMoR,eACR5Z,GAAQwI,EAAMoR,gBAAgB,SAAUC,GAEtCpU,GAAO6F,EAASuO,EAAMC,aAAe,GAAInN,GAAWkN,GAAO,OAG7DpU,GAAO6F,EAAS9C,EAAMkD,WAAa,IAAM,GAAIiB,GAAWnE,GAAO,IAGjEjR,KAAK0iB,OAAOzR,MAEdkQ,QAAS,SAAiBlQ,GACxB,IAAIjR,KAAKif,SAAT,CAIA,IAAImD,EAASpiB,KAAKoiB,OACdrO,EAAW/T,KAAK+T,SAEhB9C,EAAMoR,eACR5Z,GAAQwI,EAAMoR,gBAAgB,SAAUC,UAC/BvO,EAASuO,EAAMC,sBAGjBxO,EAAS9C,EAAMkD,WAAa,GAGhCiO,IAILnR,EAAM0Q,iBAEDtjB,OAAOW,KAAK+U,GAAU1P,SACzBrE,KAAKoiB,OAAS,IAGZpiB,KAAKyiB,WACPziB,KAAKyiB,UAAW,EAChB9S,GAAY3P,KAAKwhB,QAAShW,EAAaxL,KAAK2c,SAAW3c,KAAKqG,QAAQ9E,QAGtEiQ,GAAcxR,KAAK8O,QAAS9C,EAAgB,CAC1CwW,cAAevR,EACfmR,OAAQA,QAKVM,GAAS,CACXA,OAAQ,SAAgBzR,GACtB,IAkBI2K,EAlBAvV,EAAUrG,KAAKqG,QACfgX,EAAard,KAAKqd,WAClBP,EAAgB9c,KAAK8c,cACrBgB,EAAc9d,KAAK8d,YACnB/J,EAAW/T,KAAK+T,SAChBqO,EAASpiB,KAAKoiB,OACdrhB,EAAcsF,EAAQtF,YACtBoR,EAAO2L,EAAY3L,KACnBG,EAAMwL,EAAYxL,IAClB0D,EAAQ8H,EAAY9H,MACpBD,EAAS+H,EAAY/H,OACrB4M,EAAQxQ,EAAO6D,EACf4M,EAAStQ,EAAMyD,EACfmI,EAAU,EACVC,EAAS,EACTjG,EAAW4E,EAAc9G,MACzBoC,EAAY0E,EAAc/G,OAC1B8M,GAAa,GAGZ9hB,GAAekQ,EAAM6R,WACxB/hB,EAAciV,GAASD,EAASC,EAAQD,EAAS,GAG/C/V,KAAKwd,UACPU,EAAUJ,EAAYI,QACtBC,EAASL,EAAYK,OACrBjG,EAAWgG,EAAUxP,KAAKqK,IAAI+D,EAAc9G,MAAOqH,EAAWrH,MAAOqH,EAAWlL,KAAOkL,EAAWrH,OAClGoC,EAAY+F,EAASzP,KAAKqK,IAAI+D,EAAc/G,OAAQsH,EAAWtH,OAAQsH,EAAW/K,IAAM+K,EAAWtH,SAGrG,IAAI7B,EAAUH,EAAS1V,OAAOW,KAAK+U,GAAU,IACzCgP,EAAQ,CACVle,EAAGqP,EAAQS,KAAOT,EAAQK,OAC1BzP,EAAGoP,EAAQW,KAAOX,EAAQO,QAGxBuO,EAAQ,SAAeC,GACzB,OAAQA,GACN,KAAKvY,EACCiY,EAAQI,EAAMle,EAAIqT,IACpB6K,EAAMle,EAAIqT,EAAWyK,GAGvB,MAEF,KAAKhY,EACCwH,EAAO4Q,EAAMle,EAAIqZ,IACnB6E,EAAMle,EAAIqZ,EAAU/L,GAGtB,MAEF,KAAKtH,EACCyH,EAAMyQ,EAAMje,EAAIqZ,IAClB4E,EAAMje,EAAIqZ,EAAS7L,GAGrB,MAEF,KAAK1H,EACCgY,EAASG,EAAMje,EAAIsT,IACrB2K,EAAMje,EAAIsT,EAAYwK,GAGxB,QAIN,OAAQR,GAEN,KAAK9X,EACH6H,GAAQ4Q,EAAMle,EACdyN,GAAOyQ,EAAMje,EACb,MAGF,KAAK4F,EACH,GAAIqY,EAAMle,GAAK,IAAM8d,GAASzK,GAAYnX,IAAgBuR,GAAO6L,GAAUyE,GAAUxK,IAAa,CAChGyK,GAAa,EACb,MAGFG,EAAMtY,GACNsL,GAAS+M,EAAMle,EAEXmR,EAAQ,IACVoM,EAASzX,EACTqL,GAASA,EACT7D,GAAQ6D,GAGNjV,IACFgV,EAASC,EAAQjV,EACjBuR,IAAQwL,EAAY/H,OAASA,GAAU,GAGzC,MAEF,KAAKlL,EACH,GAAIkY,EAAMje,GAAK,IAAMwN,GAAO6L,GAAUpd,IAAgBoR,GAAQ+L,GAAWyE,GAASzK,IAAY,CAC5F2K,GAAa,EACb,MAGFG,EAAMnY,GACNkL,GAAUgN,EAAMje,EAChBwN,GAAOyQ,EAAMje,EAETiR,EAAS,IACXqM,EAASxX,EACTmL,GAAUA,EACVzD,GAAOyD,GAGLhV,IACFiV,EAAQD,EAAShV,EACjBoR,IAAS2L,EAAY9H,MAAQA,GAAS,GAGxC,MAEF,KAAKrL,EACH,GAAIoY,EAAMle,GAAK,IAAMsN,GAAQ+L,GAAWnd,IAAgBuR,GAAO6L,GAAUyE,GAAUxK,IAAa,CAC9FyK,GAAa,EACb,MAGFG,EAAMrY,GACNqL,GAAS+M,EAAMle,EACfsN,GAAQ4Q,EAAMle,EAEVmR,EAAQ,IACVoM,EAAS1X,EACTsL,GAASA,EACT7D,GAAQ6D,GAGNjV,IACFgV,EAASC,EAAQjV,EACjBuR,IAAQwL,EAAY/H,OAASA,GAAU,GAGzC,MAEF,KAAKnL,EACH,GAAImY,EAAMje,GAAK,IAAM8d,GAAUxK,GAAarX,IAAgBoR,GAAQ+L,GAAWyE,GAASzK,IAAY,CAClG2K,GAAa,EACb,MAGFG,EAAMpY,GACNmL,GAAUgN,EAAMje,EAEZiR,EAAS,IACXqM,EAASvX,EACTkL,GAAUA,EACVzD,GAAOyD,GAGLhV,IACFiV,EAAQD,EAAShV,EACjBoR,IAAS2L,EAAY9H,MAAQA,GAAS,GAGxC,MAEF,KAAKlL,EACH,GAAI/J,EAAa,CACf,GAAIgiB,EAAMje,GAAK,IAAMwN,GAAO6L,GAAUwE,GAASzK,GAAW,CACxD2K,GAAa,EACb,MAGFG,EAAMnY,GACNkL,GAAUgN,EAAMje,EAChBwN,GAAOyQ,EAAMje,EACbkR,EAAQD,EAAShV,OAEjBiiB,EAAMnY,GACNmY,EAAMtY,GAEFqY,EAAMle,GAAK,EACT8d,EAAQzK,EACVlC,GAAS+M,EAAMle,EACNke,EAAMje,GAAK,GAAKwN,GAAO6L,IAChC0E,GAAa,GAGf7M,GAAS+M,EAAMle,EAGbke,EAAMje,GAAK,EACTwN,EAAM6L,IACRpI,GAAUgN,EAAMje,EAChBwN,GAAOyQ,EAAMje,IAGfiR,GAAUgN,EAAMje,EAChBwN,GAAOyQ,EAAMje,GAIbkR,EAAQ,GAAKD,EAAS,GACxBqM,EAASnX,EACT8K,GAAUA,EACVC,GAASA,EACT1D,GAAOyD,EACP5D,GAAQ6D,GACCA,EAAQ,GACjBoM,EAASrX,EACTiL,GAASA,EACT7D,GAAQ6D,GACCD,EAAS,IAClBqM,EAASpX,EACT+K,GAAUA,EACVzD,GAAOyD,GAGT,MAEF,KAAKhL,EACH,GAAIhK,EAAa,CACf,GAAIgiB,EAAMje,GAAK,IAAMwN,GAAO6L,GAAUhM,GAAQ+L,GAAU,CACtD2E,GAAa,EACb,MAGFG,EAAMnY,GACNkL,GAAUgN,EAAMje,EAChBwN,GAAOyQ,EAAMje,EACbkR,EAAQD,EAAShV,EACjBoR,GAAQ2L,EAAY9H,MAAQA,OAE5BgN,EAAMnY,GACNmY,EAAMrY,GAEFoY,EAAMle,GAAK,EACTsN,EAAO+L,GACTlI,GAAS+M,EAAMle,EACfsN,GAAQ4Q,EAAMle,GACLke,EAAMje,GAAK,GAAKwN,GAAO6L,IAChC0E,GAAa,IAGf7M,GAAS+M,EAAMle,EACfsN,GAAQ4Q,EAAMle,GAGZke,EAAMje,GAAK,EACTwN,EAAM6L,IACRpI,GAAUgN,EAAMje,EAChBwN,GAAOyQ,EAAMje,IAGfiR,GAAUgN,EAAMje,EAChBwN,GAAOyQ,EAAMje,GAIbkR,EAAQ,GAAKD,EAAS,GACxBqM,EAASpX,EACT+K,GAAUA,EACVC,GAASA,EACT1D,GAAOyD,EACP5D,GAAQ6D,GACCA,EAAQ,GACjBoM,EAAStX,EACTkL,GAASA,EACT7D,GAAQ6D,GACCD,EAAS,IAClBqM,EAASnX,EACT8K,GAAUA,EACVzD,GAAOyD,GAGT,MAEF,KAAK9K,EACH,GAAIlK,EAAa,CACf,GAAIgiB,EAAMle,GAAK,IAAMsN,GAAQ+L,GAAW0E,GAAUxK,GAAY,CAC5DyK,GAAa,EACb,MAGFG,EAAMrY,GACNqL,GAAS+M,EAAMle,EACfsN,GAAQ4Q,EAAMle,EACdkR,EAASC,EAAQjV,OAEjBiiB,EAAMpY,GACNoY,EAAMrY,GAEFoY,EAAMle,GAAK,EACTsN,EAAO+L,GACTlI,GAAS+M,EAAMle,EACfsN,GAAQ4Q,EAAMle,GACLke,EAAMje,GAAK,GAAK8d,GAAUxK,IACnCyK,GAAa,IAGf7M,GAAS+M,EAAMle,EACfsN,GAAQ4Q,EAAMle,GAGZke,EAAMje,GAAK,EACT8d,EAASxK,IACXrC,GAAUgN,EAAMje,GAGlBiR,GAAUgN,EAAMje,EAIhBkR,EAAQ,GAAKD,EAAS,GACxBqM,EAAStX,EACTiL,GAAUA,EACVC,GAASA,EACT1D,GAAOyD,EACP5D,GAAQ6D,GACCA,EAAQ,GACjBoM,EAASpX,EACTgL,GAASA,EACT7D,GAAQ6D,GACCD,EAAS,IAClBqM,EAASrX,EACTgL,GAAUA,EACVzD,GAAOyD,GAGT,MAEF,KAAK/K,EACH,GAAIjK,EAAa,CACf,GAAIgiB,EAAMle,GAAK,IAAM8d,GAASzK,GAAY0K,GAAUxK,GAAY,CAC9DyK,GAAa,EACb,MAGFG,EAAMtY,GACNsL,GAAS+M,EAAMle,EACfkR,EAASC,EAAQjV,OAEjBiiB,EAAMpY,GACNoY,EAAMtY,GAEFqY,EAAMle,GAAK,EACT8d,EAAQzK,EACVlC,GAAS+M,EAAMle,EACNke,EAAMje,GAAK,GAAK8d,GAAUxK,IACnCyK,GAAa,GAGf7M,GAAS+M,EAAMle,EAGbke,EAAMje,GAAK,EACT8d,EAASxK,IACXrC,GAAUgN,EAAMje,GAGlBiR,GAAUgN,EAAMje,EAIhBkR,EAAQ,GAAKD,EAAS,GACxBqM,EAASrX,EACTgL,GAAUA,EACVC,GAASA,EACT1D,GAAOyD,EACP5D,GAAQ6D,GACCA,EAAQ,GACjBoM,EAASnX,EACT+K,GAASA,EACT7D,GAAQ6D,GACCD,EAAS,IAClBqM,EAAStX,EACTiL,GAAUA,EACVzD,GAAOyD,GAGT,MAGF,KAAKvL,EACHxK,KAAKyE,KAAKse,EAAMle,EAAGke,EAAMje,GACzB+d,GAAa,EACb,MAGF,KAAKpY,EACHzK,KAAKoD,KAAK0Q,GAAgBC,GAAW9C,GACrC4R,GAAa,EACb,MAGF,KAAKtY,EACH,IAAKwY,EAAMle,IAAMke,EAAMje,EAAG,CACxB+d,GAAa,EACb,MAGFjH,EAAS5J,GAAUhS,KAAK0D,SACxByO,EAAO+B,EAAQK,OAASqH,EAAOzJ,KAC/BG,EAAM4B,EAAQO,OAASmH,EAAOtJ,IAC9B0D,EAAQ8H,EAAYxF,SACpBvC,EAAS+H,EAAYtF,UAEjBuK,EAAMle,EAAI,EACZud,EAASW,EAAMje,EAAI,EAAIkG,EAAoBF,EAClCiY,EAAMle,EAAI,IACnBsN,GAAQ6D,EACRoM,EAASW,EAAMje,EAAI,EAAImG,EAAoBF,GAGzCgY,EAAMje,EAAI,IACZwN,GAAOyD,GAIJ/V,KAAK2c,UACRlN,GAAYzP,KAAKgf,QAAS3T,GAC1BrL,KAAK2c,SAAU,EAEX3c,KAAKwd,SACPxd,KAAK0e,cAAa,GAAM,IAI5B,MAGAmE,IACF/E,EAAY9H,MAAQA,EACpB8H,EAAY/H,OAASA,EACrB+H,EAAY3L,KAAOA,EACnB2L,EAAYxL,IAAMA,EAClBtS,KAAKoiB,OAASA,EACdpiB,KAAK4c,iBAIPnU,GAAQsL,GAAU,SAAUmP,GAC1BA,EAAE3O,OAAS2O,EAAEvO,KACbuO,EAAEzO,OAASyO,EAAErO,UAKfhR,GAAU,CAEZV,KAAM,WAaJ,OAZInD,KAAK8C,OAAU9C,KAAK2c,SAAY3c,KAAKif,WACvCjf,KAAK2c,SAAU,EACf3c,KAAK0e,cAAa,GAAM,GAEpB1e,KAAKqG,QAAQ9E,OACf8N,GAASrP,KAAKwhB,QAAShW,GAGzBiE,GAAYzP,KAAKgf,QAAS3T,GAC1BrL,KAAKmG,eAAenG,KAAK4e,qBAGpB5e,MAGT8D,MAAO,WAYL,OAXI9D,KAAK8C,QAAU9C,KAAKif,WACtBjf,KAAKid,UAAY/O,GAAO,GAAIlO,KAAK0d,kBACjC1d,KAAKqd,WAAanP,GAAO,GAAIlO,KAAK2d,mBAClC3d,KAAK8d,YAAc5P,GAAO,GAAIlO,KAAK4e,oBACnC5e,KAAK0c,eAED1c,KAAK2c,SACP3c,KAAK4c,iBAIF5c,MAGT+D,MAAO,WAiBL,OAhBI/D,KAAK2c,UAAY3c,KAAKif,WACxB/Q,GAAOlO,KAAK8d,YAAa,CACvB3L,KAAM,EACNG,IAAK,EACL0D,MAAO,EACPD,OAAQ,IAEV/V,KAAK2c,SAAU,EACf3c,KAAK4c,gBACL5c,KAAKyd,aAAY,GAAM,GAEvBzd,KAAK0c,eACLjN,GAAYzP,KAAKwhB,QAAShW,GAC1B6D,GAASrP,KAAKgf,QAAS3T,IAGlBrL,MASTiE,QAAS,SAAiBC,GACxB,IAAIif,EAAc/e,UAAUC,OAAS,QAAsBZ,IAAjBW,UAAU,IAAmBA,UAAU,GA4BjF,OA1BKpE,KAAKif,UAAY/a,IAChBlE,KAAKojB,QACPpjB,KAAK8O,QAAQ1O,IAAM8D,GAGjBif,GACFnjB,KAAKkE,IAAMA,EACXlE,KAAK+W,MAAM3W,IAAM8D,EAEblE,KAAK8C,QACP9C,KAAKuf,aAAanf,IAAM8D,EACxBuE,GAAQzI,KAAKwf,UAAU,SAAU1Q,GAC/BA,EAAQuR,qBAAqB,OAAO,GAAGjgB,IAAM8D,QAI7ClE,KAAKojB,QACPpjB,KAAKqjB,UAAW,GAGlBrjB,KAAKqG,QAAQrF,KAAO,KACpBhB,KAAKsjB,WACLtjB,KAAKujB,KAAKrf,KAIPlE,MAGTsE,OAAQ,WAMN,OALItE,KAAK8C,OAAS9C,KAAKif,WACrBjf,KAAKif,UAAW,EAChBxP,GAAYzP,KAAK0D,QAAS0H,IAGrBpL,MAGTuE,QAAS,WAMP,OALIvE,KAAK8C,QAAU9C,KAAKif,WACtBjf,KAAKif,UAAW,EAChB5P,GAASrP,KAAK0D,QAAS0H,IAGlBpL,MAOTwE,QAAS,WACP,IAAIsK,EAAU9O,KAAK8O,QAEnB,OAAKA,EAAQzE,IAIbyE,EAAQzE,QAAa5G,EAEjBzD,KAAKojB,OAASpjB,KAAKqjB,WACrBvU,EAAQ1O,IAAMJ,KAAKwjB,aAGrBxjB,KAAKsjB,WACEtjB,MAVEA,MAmBXyE,KAAM,SAAcC,GAClB,IAAIC,EAAUP,UAAUC,OAAS,QAAsBZ,IAAjBW,UAAU,GAAmBA,UAAU,GAAKM,EAC9E+e,EAAmBzjB,KAAKqd,WACxBlL,EAAOsR,EAAiBtR,KACxBG,EAAMmR,EAAiBnR,IAC3B,OAAOtS,KAAK4E,OAAO8I,GAAYhJ,GAAWA,EAAUyN,EAAOvR,OAAO8D,GAAUgJ,GAAY/I,GAAWA,EAAU2N,EAAM1R,OAAO+D,KAS5HC,OAAQ,SAAgBC,GACtB,IAAIC,EAAIV,UAAUC,OAAS,QAAsBZ,IAAjBW,UAAU,GAAmBA,UAAU,GAAKS,EACxEwY,EAAard,KAAKqd,WAClBiB,GAAU,EAoBd,OAnBAzZ,EAAIjE,OAAOiE,GACXC,EAAIlE,OAAOkE,GAEP9E,KAAK8C,QAAU9C,KAAKif,UAAYjf,KAAKqG,QAAQvE,UAC3CyL,GAAS1I,KACXwY,EAAWlL,KAAOtN,EAClByZ,GAAU,GAGR/Q,GAASzI,KACXuY,EAAW/K,IAAMxN,EACjBwZ,GAAU,GAGRA,GACFte,KAAK0c,cAAa,IAIf1c,MASToD,KAAM,SAAc4B,EAAOC,GACzB,IAAIoY,EAAard,KAAKqd,WAStB,OARArY,EAAQpE,OAAOoE,GAGbA,EADEA,EAAQ,EACF,GAAK,EAAIA,GAET,EAAIA,EAGPhF,KAAKkF,OAAOmY,EAAWrH,MAAQhR,EAAQqY,EAAWhG,aAAc,KAAMpS,IAU/EC,OAAQ,SAAgBF,EAAO0e,EAAOze,GACpC,IAAIoB,EAAUrG,KAAKqG,QACfgX,EAAard,KAAKqd,WAClBrH,EAAQqH,EAAWrH,MACnBD,EAASsH,EAAWtH,OACpBsB,EAAegG,EAAWhG,aAC1BE,EAAgB8F,EAAW9F,cAG/B,GAFAvS,EAAQpE,OAAOoE,GAEXA,GAAS,GAAKhF,KAAK8C,QAAU9C,KAAKif,UAAY5Y,EAAQpE,SAAU,CAClE,IAAI2U,EAAWS,EAAerS,EAC1B6R,EAAYU,EAAgBvS,EAEhC,IAIO,IAJHwM,GAAcxR,KAAK8O,QAASjC,GAAY,CAC1C7H,MAAOA,EACP2e,SAAU3N,EAAQqB,EAClBmL,cAAevd,IAEf,OAAOjF,KAGT,GAAIiF,EAAgB,CAClB,IAAI8O,EAAW/T,KAAK+T,SAChB6H,EAAS5J,GAAUhS,KAAK0D,SACxBjC,EAASsS,GAAY1V,OAAOW,KAAK+U,GAAU1P,OAASqR,GAAkB3B,GAAY,CACpFwB,MAAOtQ,EAAesQ,MACtBC,MAAOvQ,EAAeuQ,OAGxB6H,EAAWlL,OAASyE,EAAWZ,KAAWvU,EAAO8T,MAAQqG,EAAOzJ,KAAOkL,EAAWlL,MAAQ6D,GAC1FqH,EAAW/K,MAAQuE,EAAYd,KAAYtU,EAAO+T,MAAQoG,EAAOtJ,IAAM+K,EAAW/K,KAAOyD,QAChFnI,GAAc8V,IAAUnW,GAASmW,EAAM7e,IAAM0I,GAASmW,EAAM5e,IACrEuY,EAAWlL,OAASyE,EAAWZ,KAAW0N,EAAM7e,EAAIwY,EAAWlL,MAAQ6D,GACvEqH,EAAW/K,MAAQuE,EAAYd,KAAY2N,EAAM5e,EAAIuY,EAAW/K,KAAOyD,KAGvEsH,EAAWlL,OAASyE,EAAWZ,GAAS,EACxCqH,EAAW/K,MAAQuE,EAAYd,GAAU,GAG3CsH,EAAWrH,MAAQY,EACnByG,EAAWtH,OAASc,EACpB7W,KAAK0c,cAAa,GAGpB,OAAO1c,MAQTmF,OAAQ,SAAgBC,GACtB,OAAOpF,KAAKqF,UAAUrF,KAAKid,UAAU9X,QAAU,GAAKvE,OAAOwE,KAQ7DC,SAAU,SAAkBD,GAQ1B,OAPAA,EAASxE,OAAOwE,GAEZmI,GAASnI,IAAWpF,KAAK8C,QAAU9C,KAAKif,UAAYjf,KAAKqG,QAAQtE,YACnE/B,KAAKid,UAAU9X,OAASC,EAAS,IACjCpF,KAAK0c,cAAa,GAAM,IAGnB1c,MAQTsF,OAAQ,SAAgBC,GACtB,IAAIC,EAASxF,KAAKid,UAAUzX,OAC5B,OAAOxF,KAAK0F,MAAMH,EAASgI,GAAS/H,GAAUA,EAAS,IAQzDA,OAAQ,SAAgBC,GACtB,IAAIH,EAAStF,KAAKid,UAAU3X,OAC5B,OAAOtF,KAAK0F,MAAM6H,GAASjI,GAAUA,EAAS,EAAGG,IASnDC,MAAO,SAAeJ,GACpB,IAAIE,EAASpB,UAAUC,OAAS,QAAsBZ,IAAjBW,UAAU,GAAmBA,UAAU,GAAKkB,EAC7E2X,EAAYjd,KAAKid,UACjBsB,GAAc,EAoBlB,OAnBAjZ,EAAS1E,OAAO0E,GAChBE,EAAS5E,OAAO4E,GAEZxF,KAAK8C,QAAU9C,KAAKif,UAAYjf,KAAKqG,QAAQrE,WAC3CuL,GAASjI,KACX2X,EAAU3X,OAASA,EACnBiZ,GAAc,GAGZhR,GAAS/H,KACXyX,EAAUzX,OAASA,EACnB+Y,GAAc,GAGZA,GACFve,KAAK0c,cAAa,GAAM,IAIrB1c,MAQT2F,QAAS,WACP,IAKI3E,EALA4E,EAAUxB,UAAUC,OAAS,QAAsBZ,IAAjBW,UAAU,IAAmBA,UAAU,GACzEiC,EAAUrG,KAAKqG,QACf4W,EAAYjd,KAAKid,UACjBI,EAAard,KAAKqd,WAClBS,EAAc9d,KAAK8d,YAGvB,GAAI9d,KAAK8C,OAAS9C,KAAK2c,QAAS,CAC9B3b,EAAO,CACL6D,EAAGiZ,EAAY3L,KAAOkL,EAAWlL,KACjCrN,EAAGgZ,EAAYxL,IAAM+K,EAAW/K,IAChC0D,MAAO8H,EAAY9H,MACnBD,OAAQ+H,EAAY/H,QAEtB,IAAI/Q,EAAQiY,EAAUjH,MAAQiH,EAAU5F,aAKxC,GAJA5O,GAAQzH,GAAM,SAAUwI,EAAGtK,GACzB8B,EAAK9B,GAAKsK,EAAIxE,KAGZY,EAAS,CAGX,IAAIgd,EAASlU,KAAKC,MAAM3N,EAAK8D,EAAI9D,EAAK+U,QAClC4M,EAAQjU,KAAKC,MAAM3N,EAAK6D,EAAI7D,EAAKgV,OACrChV,EAAK6D,EAAI6J,KAAKC,MAAM3N,EAAK6D,GACzB7D,EAAK8D,EAAI4J,KAAKC,MAAM3N,EAAK8D,GACzB9D,EAAKgV,MAAQ2M,EAAQ3hB,EAAK6D,EAC1B7D,EAAK+U,OAAS6M,EAAS5hB,EAAK8D,QAG9B9D,EAAO,CACL6D,EAAG,EACHC,EAAG,EACHkR,MAAO,EACPD,OAAQ,GAaZ,OATI1P,EAAQtE,YACVf,EAAKmE,OAAS8X,EAAU9X,QAAU,GAGhCkB,EAAQrE,WACVhB,EAAKsE,OAAS2X,EAAU3X,QAAU,EAClCtE,EAAKwE,OAASyX,EAAUzX,QAAU,GAG7BxE,GAQT6E,QAAS,SAAiB7E,GACxB,IAAIqF,EAAUrG,KAAKqG,QACf4W,EAAYjd,KAAKid,UACjBI,EAAard,KAAKqd,WAClBS,EAAc,GAElB,GAAI9d,KAAK8C,QAAU9C,KAAKif,UAAYrR,GAAc5M,GAAO,CACvD,IAAIud,GAAc,EAEdlY,EAAQtE,WACNwL,GAASvM,EAAKmE,SAAWnE,EAAKmE,SAAW8X,EAAU9X,SACrD8X,EAAU9X,OAASnE,EAAKmE,OACxBoZ,GAAc,GAIdlY,EAAQrE,WACNuL,GAASvM,EAAKsE,SAAWtE,EAAKsE,SAAW2X,EAAU3X,SACrD2X,EAAU3X,OAAStE,EAAKsE,OACxBiZ,GAAc,GAGZhR,GAASvM,EAAKwE,SAAWxE,EAAKwE,SAAWyX,EAAUzX,SACrDyX,EAAUzX,OAASxE,EAAKwE,OACxB+Y,GAAc,IAIdA,GACFve,KAAK0c,cAAa,GAAM,GAG1B,IAAI1X,EAAQiY,EAAUjH,MAAQiH,EAAU5F,aAEpC9J,GAASvM,EAAK6D,KAChBiZ,EAAY3L,KAAOnR,EAAK6D,EAAIG,EAAQqY,EAAWlL,MAG7C5E,GAASvM,EAAK8D,KAChBgZ,EAAYxL,IAAMtR,EAAK8D,EAAIE,EAAQqY,EAAW/K,KAG5C/E,GAASvM,EAAKgV,SAChB8H,EAAY9H,MAAQhV,EAAKgV,MAAQhR,GAG/BuI,GAASvM,EAAK+U,UAChB+H,EAAY/H,OAAS/U,EAAK+U,OAAS/Q,GAGrChF,KAAKmG,eAAe2X,GAGtB,OAAO9d,MAOT8F,iBAAkB,WAChB,OAAO9F,KAAK8C,MAAQoL,GAAO,GAAIlO,KAAK8c,eAAiB,IAOvD/W,aAAc,WACZ,OAAO/F,KAAK4jB,MAAQ1V,GAAO,GAAIlO,KAAKid,WAAa,IAOnDjX,cAAe,WACb,IAAIqX,EAAard,KAAKqd,WAClBrc,EAAO,GAQX,OANIhB,KAAK8C,OACP2F,GAAQ,CAAC,OAAQ,MAAO,QAAS,SAAU,eAAgB,kBAAkB,SAAUe,GACrFxI,EAAKwI,GAAK6T,EAAW7T,MAIlBxI,GAQTiF,cAAe,SAAuBjF,GACpC,IAAIqc,EAAard,KAAKqd,WAClBtc,EAAcsc,EAAWtc,YAsB7B,OApBIf,KAAK8C,QAAU9C,KAAKif,UAAYrR,GAAc5M,KAC5CuM,GAASvM,EAAKmR,QAChBkL,EAAWlL,KAAOnR,EAAKmR,MAGrB5E,GAASvM,EAAKsR,OAChB+K,EAAW/K,IAAMtR,EAAKsR,KAGpB/E,GAASvM,EAAKgV,QAChBqH,EAAWrH,MAAQhV,EAAKgV,MACxBqH,EAAWtH,OAAS/U,EAAKgV,MAAQjV,GACxBwM,GAASvM,EAAK+U,UACvBsH,EAAWtH,OAAS/U,EAAK+U,OACzBsH,EAAWrH,MAAQhV,EAAK+U,OAAShV,GAGnCf,KAAK0c,cAAa,IAGb1c,MAOTkG,eAAgB,WACd,IACIlF,EADA8c,EAAc9d,KAAK8d,YAYvB,OATI9d,KAAK8C,OAAS9C,KAAK2c,UACrB3b,EAAO,CACLmR,KAAM2L,EAAY3L,KAClBG,IAAKwL,EAAYxL,IACjB0D,MAAO8H,EAAY9H,MACnBD,OAAQ+H,EAAY/H,SAIjB/U,GAAQ,IAQjBmF,eAAgB,SAAwBnF,GACtC,IAEI6iB,EACAC,EAHAhG,EAAc9d,KAAK8d,YACnB/c,EAAcf,KAAKqG,QAAQtF,YAkC/B,OA9BIf,KAAK8C,OAAS9C,KAAK2c,UAAY3c,KAAKif,UAAYrR,GAAc5M,KAC5DuM,GAASvM,EAAKmR,QAChB2L,EAAY3L,KAAOnR,EAAKmR,MAGtB5E,GAASvM,EAAKsR,OAChBwL,EAAYxL,IAAMtR,EAAKsR,KAGrB/E,GAASvM,EAAKgV,QAAUhV,EAAKgV,QAAU8H,EAAY9H,QACrD6N,GAAe,EACf/F,EAAY9H,MAAQhV,EAAKgV,OAGvBzI,GAASvM,EAAK+U,SAAW/U,EAAK+U,SAAW+H,EAAY/H,SACvD+N,GAAgB,EAChBhG,EAAY/H,OAAS/U,EAAK+U,QAGxBhV,IACE8iB,EACF/F,EAAY/H,OAAS+H,EAAY9H,MAAQjV,EAChC+iB,IACThG,EAAY9H,MAAQ8H,EAAY/H,OAAShV,IAI7Cf,KAAK4c,iBAGA5c,MAQToG,iBAAkB,WAChB,IAAIC,EAAUjC,UAAUC,OAAS,QAAsBZ,IAAjBW,UAAU,GAAmBA,UAAU,GAAK,GAElF,IAAKpE,KAAK8C,QAAUtD,OAAOukB,kBACzB,OAAO,KAGT,IAAI1G,EAAard,KAAKqd,WAClB7U,EAASsO,GAAgB9W,KAAK+W,MAAO/W,KAAKid,UAAWI,EAAYhX,GAErE,IAAKrG,KAAK2c,QACR,OAAOnU,EAGT,IAAIwb,EAAgBhkB,KAAK2F,UACrBse,EAAWD,EAAcnf,EACzBqf,EAAWF,EAAclf,EACzBqf,EAAeH,EAAchO,MAC7BoO,EAAgBJ,EAAcjO,OAE9B/Q,EAAQwD,EAAOwN,MAAQtH,KAAKmL,MAAMwD,EAAWhG,cAEnC,IAAVrS,IACFif,GAAYjf,EACZkf,GAAYlf,EACZmf,GAAgBnf,EAChBof,GAAiBpf,GAGnB,IAAIjE,EAAcojB,EAAeC,EAC7BvL,EAAWhD,GAAiB,CAC9B9U,YAAaA,EACbiV,MAAO3P,EAAQ6R,UAAYzK,IAC3BsI,OAAQ1P,EAAQ+R,WAAa3K,MAE3BqL,EAAWjD,GAAiB,CAC9B9U,YAAaA,EACbiV,MAAO3P,EAAQiS,UAAY,EAC3BvC,OAAQ1P,EAAQmS,WAAa,GAC5B,SAECuF,EAAoBlI,GAAiB,CACvC9U,YAAaA,EACbiV,MAAO3P,EAAQ2P,QAAoB,IAAVhR,EAAcwD,EAAOwN,MAAQmO,GACtDpO,OAAQ1P,EAAQ0P,SAAqB,IAAV/Q,EAAcwD,EAAOuN,OAASqO,KAEvDpO,EAAQ+H,EAAkB/H,MAC1BD,EAASgI,EAAkBhI,OAE/BC,EAAQtH,KAAKqK,IAAIF,EAAS7C,MAAOtH,KAAKsK,IAAIF,EAAS9C,MAAOA,IAC1DD,EAASrH,KAAKqK,IAAIF,EAAS9C,OAAQrH,KAAKsK,IAAIF,EAAS/C,OAAQA,IAC7D,IAAI0C,EAASzO,SAAS0O,cAAc,UAChCC,EAAUF,EAAOG,WAAW,MAChCH,EAAOzC,MAAQxH,GAAuBwH,GACtCyC,EAAO1C,OAASvH,GAAuBuH,GACvC4C,EAAQW,UAAYjT,EAAQuR,WAAa,cACzCe,EAAQY,SAAS,EAAG,EAAGvD,EAAOD,GAC9B,IAAIsO,EAAwBhe,EAAQyR,sBAChCA,OAAkD,IAA1BuM,GAA0CA,EAClErM,EAAwB3R,EAAQ2R,sBACpCW,EAAQb,sBAAwBA,EAE5BE,IACFW,EAAQX,sBAAwBA,GAIlC,IAKIsM,EACAC,EAEAC,EACAC,EACAC,EACAC,EAXAC,EAAcpc,EAAOwN,MACrB6O,EAAerc,EAAOuN,OAEtB+O,EAAOb,EACPc,EAAOb,EASPY,IAASX,GAAgBW,EAAOF,GAClCE,EAAO,EACPR,EAAW,EACXE,EAAO,EACPE,EAAW,GACFI,GAAQ,GACjBN,GAAQM,EACRA,EAAO,EACPR,EAAW5V,KAAKqK,IAAI6L,EAAaT,EAAeW,GAChDJ,EAAWJ,GACFQ,GAAQF,IACjBJ,EAAO,EACPF,EAAW5V,KAAKqK,IAAIoL,EAAcS,EAAcE,GAChDJ,EAAWJ,GAGTA,GAAY,GAAKS,IAASX,GAAiBW,EAAOF,GACpDE,EAAO,EACPR,EAAY,EACZE,EAAO,EACPE,EAAY,GACHI,GAAQ,GACjBN,GAAQM,EACRA,EAAO,EACPR,EAAY7V,KAAKqK,IAAI8L,EAAcT,EAAgBW,GACnDJ,EAAYJ,GACHQ,GAAQF,IACjBJ,EAAO,EACPF,EAAY7V,KAAKqK,IAAIqL,EAAeS,EAAeE,GACnDJ,EAAYJ,GAGd,IAAIlL,EAAS,CAACyL,EAAMC,EAAMT,EAAUC,GAEpC,GAAIG,EAAW,GAAKC,EAAY,EAAG,CACjC,IAAIjf,EAAQsQ,EAAQmO,EACpB9K,EAAOhR,KAAKmc,EAAO9e,EAAO+e,EAAO/e,EAAOgf,EAAWhf,EAAOif,EAAYjf,GAQxE,OAHAiT,EAAQe,UAAUpR,MAAMqQ,EAAS,CAACnQ,GAAQ2C,OAAOvC,EAAmByQ,EAAOM,KAAI,SAAUC,GACvF,OAAOlL,KAAKmL,MAAMrL,GAAuBoL,UAEpCnB,GAQTnS,eAAgB,SAAwBvF,GACtC,IAAIsF,EAAUrG,KAAKqG,QAenB,OAbKrG,KAAKif,UAAavR,GAAY3M,KAEjCsF,EAAQtF,YAAc2N,KAAKsK,IAAI,EAAGjY,IAAgBqM,IAE9CpN,KAAK8C,QACP9C,KAAKyc,cAEDzc,KAAK2c,SACP3c,KAAK4c,kBAKJ5c,MAQTuG,YAAa,SAAqBC,GAChC,IAAIH,EAAUrG,KAAKqG,QACfmb,EAAUxhB,KAAKwhB,QACfzC,EAAO/e,KAAK+e,KAEhB,GAAI/e,KAAK8C,QAAU9C,KAAKif,SAAU,CAChC,IAAI+F,EAAYxe,IAASoF,EACrB9J,EAAUuE,EAAQvE,SAAW0E,IAASqF,EAC1CrF,EAAOwe,GAAaljB,EAAU0E,EAAOsF,EACrCzF,EAAQxF,SAAW2F,EACnBX,GAAQ2b,EAAS9V,EAAalF,GAC9BmJ,GAAY6R,EAAStW,EAAY8Z,GACjCrV,GAAY6R,EAAS/V,EAAY3J,GAE5BuE,EAAQhE,iBAEXwD,GAAQkZ,EAAMrT,EAAalF,GAC3BmJ,GAAYoP,EAAM7T,EAAY8Z,GAC9BrV,GAAYoP,EAAMtT,EAAY3J,IAIlC,OAAO9B,OAIPilB,GAAiBhb,EAAOib,QAExBA,GAAuB,WAMzB,SAASA,EAAQpW,GACf,IAAIzI,EAAUjC,UAAUC,OAAS,QAAsBZ,IAAjBW,UAAU,GAAmBA,UAAU,GAAK,GAIlF,GAFA4C,EAAgBhH,KAAMklB,IAEjBpW,IAAY5B,GAAgBtD,KAAKkF,EAAQqW,SAC5C,MAAM,IAAIC,MAAM,4EAGlBplB,KAAK8O,QAAUA,EACf9O,KAAKqG,QAAU6H,GAAO,GAAIf,GAAUS,GAAcvH,IAAYA,GAC9DrG,KAAK2c,SAAU,EACf3c,KAAKif,UAAW,EAChBjf,KAAK+T,SAAW,GAChB/T,KAAK8C,OAAQ,EACb9C,KAAKqlB,WAAY,EACjBrlB,KAAKqjB,UAAW,EAChBrjB,KAAK4jB,OAAQ,EACb5jB,KAAKslB,QAAS,EACdtlB,KAAKulB,OA4XP,OAzXA9d,EAAayd,EAAS,CAAC,CACrB1hB,IAAK,OACLhF,MAAO,WACL,IAEI0F,EAFA4K,EAAU9O,KAAK8O,QACfqW,EAAUrW,EAAQqW,QAAQpV,cAG9B,IAAIjB,EAAQzE,GAAZ,CAMA,GAFAyE,EAAQzE,GAAarK,KAEL,QAAZmlB,EAAmB,CAMrB,GALAnlB,KAAKojB,OAAQ,EAEblf,EAAM4K,EAAQmB,aAAa,QAAU,GACrCjQ,KAAKwjB,YAActf,GAEdA,EACH,OAIFA,EAAM4K,EAAQ1O,QACO,WAAZ+kB,GAAwB3lB,OAAOukB,oBACxC7f,EAAM4K,EAAQ0W,aAGhBxlB,KAAKujB,KAAKrf,MAEX,CACDV,IAAK,OACLhF,MAAO,SAAc0F,GACnB,IAAIud,EAAQzhB,KAEZ,GAAKkE,EAAL,CAIAlE,KAAKkE,IAAMA,EACXlE,KAAKid,UAAY,GACjB,IAAInO,EAAU9O,KAAK8O,QACfzI,EAAUrG,KAAKqG,QAOnB,GALKA,EAAQtE,WAAcsE,EAAQrE,WACjCqE,EAAQ/E,kBAAmB,GAIxB+E,EAAQ/E,kBAAqB9B,OAAOmb,YAMzC,GAAI3N,GAAgBpD,KAAK1F,GAEnB+I,GAAqBrD,KAAK1F,GAC5BlE,KAAKylB,KAAKpL,GAAqBnW,IAI/BlE,KAAK0lB,YAPT,CAeA,IAAIC,EAAM,IAAIC,eACVF,EAAQ1lB,KAAK0lB,MAAMnF,KAAKvgB,MAC5BA,KAAKqlB,WAAY,EACjBrlB,KAAK2lB,IAAMA,EAKXA,EAAIE,QAAUH,EACdC,EAAIG,QAAUJ,EACdC,EAAII,UAAYL,EAEhBC,EAAIK,WAAa,WAEXL,EAAIM,kBAAkB,kBAAoBnZ,IAC5C6Y,EAAIO,SAIRP,EAAIQ,OAAS,WACX1E,EAAMgE,KAAKE,EAAIS,WAGjBT,EAAIU,UAAY,WACd5E,EAAM4D,WAAY,EAClB5D,EAAMkE,IAAM,MAIVtf,EAAQhF,kBAAoBsR,GAAiBzO,IAAQ4K,EAAQqQ,cAC/Djb,EAAM+O,GAAa/O,IAGrByhB,EAAIW,KAAK,MAAOpiB,GAChByhB,EAAIY,aAAe,cACnBZ,EAAIa,gBAA0C,oBAAxB1X,EAAQqQ,YAC9BwG,EAAIc,YAxDFzmB,KAAK0lB,WA0DR,CACDliB,IAAK,OACLhF,MAAO,SAAckc,GACnB,IAAIrU,EAAUrG,KAAKqG,QACf4W,EAAYjd,KAAKid,UAGjB3B,EAAcD,GAAuBX,GACrCvV,EAAS,EACTG,EAAS,EACTE,EAAS,EAEb,GAAI8V,EAAc,EAAG,CAEnBtb,KAAKkE,IAAM6W,GAAqBL,EAAa5N,IAE7C,IAAI4Z,EAAoBpK,GAAiBhB,GAEzCnW,EAASuhB,EAAkBvhB,OAC3BG,EAASohB,EAAkBphB,OAC3BE,EAASkhB,EAAkBlhB,OAGzBa,EAAQtE,YACVkb,EAAU9X,OAASA,GAGjBkB,EAAQrE,WACVib,EAAU3X,OAASA,EACnB2X,EAAUzX,OAASA,GAGrBxF,KAAK0lB,UAEN,CACDliB,IAAK,QACLhF,MAAO,WACL,IAAIsQ,EAAU9O,KAAK8O,QACf5K,EAAMlE,KAAKkE,IACXib,EAAcrQ,EAAQqQ,YACtBC,EAAiBlb,EAEjBlE,KAAKqG,QAAQhF,kBAAoBsR,GAAiBzO,KAC/Cib,IACHA,EAAc,aAIhBC,EAAiBnM,GAAa/O,IAGhClE,KAAKmf,YAAcA,EACnBnf,KAAKof,eAAiBA,EACtB,IAAIrI,EAAQ/M,SAAS0O,cAAc,OAE/ByG,IACFpI,EAAMoI,YAAcA,GAGtBpI,EAAM3W,IAAMgf,GAAkBlb,EAC9B6S,EAAM1W,IAAMyO,EAAQzO,KAAO,oBAC3BL,KAAK+W,MAAQA,EACbA,EAAMoP,OAASnmB,KAAKia,MAAMsG,KAAKvgB,MAC/B+W,EAAM+O,QAAU9lB,KAAK2mB,KAAKpG,KAAKvgB,MAC/BqP,GAAS0H,EAAOzL,GAChBwD,EAAQ8X,WAAWC,aAAa9P,EAAOjI,EAAQgY,eAEhD,CACDtjB,IAAK,QACLhF,MAAO,WACL,IAAIuoB,EAAS/mB,KAET+W,EAAQ/W,KAAK+W,MACjBA,EAAMoP,OAAS,KACfpP,EAAM+O,QAAU,KAChB9lB,KAAKslB,QAAS,EAGd,IAAI0B,EAAc/c,EAAOgd,WAAa,sCAAsCrd,KAAKK,EAAOgd,UAAUC,WAE9FC,EAAO,SAAc9P,EAAcE,GACrCrJ,GAAO6Y,EAAO9J,UAAW,CACvB5F,aAAcA,EACdE,cAAeA,EACfxW,YAAasW,EAAeE,IAE9BwP,EAAOzB,QAAS,EAChByB,EAAOnD,OAAQ,EAEfmD,EAAOK,SAIT,IAAIrQ,EAAMM,cAAiB2P,EAA3B,CAKA,IAAIK,EAAcrd,SAAS0O,cAAc,OACrC4O,EAAOtd,SAASsd,MAAQtd,SAASG,gBACrCnK,KAAKqnB,YAAcA,EAEnBA,EAAYlB,OAAS,WACnBgB,EAAKE,EAAYrR,MAAOqR,EAAYtR,QAE/BiR,GACHM,EAAKC,YAAYF,IAIrBA,EAAYjnB,IAAM2W,EAAM3W,IAGnB4mB,IACHK,EAAYtnB,MAAMggB,QAAU,uJAC5BuH,EAAKhI,YAAY+H,SArBjBF,EAAKpQ,EAAMM,aAAcN,EAAMQ,iBAwBlC,CACD/T,IAAK,OACLhF,MAAO,WACL,IAAIuY,EAAQ/W,KAAK+W,MACjBA,EAAMoP,OAAS,KACfpP,EAAM+O,QAAU,KAChB/O,EAAM6P,WAAWW,YAAYxQ,GAC7B/W,KAAK+W,MAAQ,OAEd,CACDvT,IAAK,QACLhF,MAAO,WACL,GAAKwB,KAAK4jB,QAAS5jB,KAAK8C,MAAxB,CAIA,IAAIgM,EAAU9O,KAAK8O,QACfzI,EAAUrG,KAAKqG,QACf0Q,EAAQ/W,KAAK+W,MAEb8F,EAAY/N,EAAQ8X,WACpBY,EAAWxd,SAAS0O,cAAc,OACtC8O,EAAS1H,UAAYzS,GACrB,IAAI3J,EAAU8jB,EAAS7H,cAAc,IAAIxU,OAAOd,EAAW,eACvDoO,EAAS/U,EAAQic,cAAc,IAAIxU,OAAOd,EAAW,YACrDmX,EAAU9d,EAAQic,cAAc,IAAIxU,OAAOd,EAAW,cACtD2U,EAAUtb,EAAQic,cAAc,IAAIxU,OAAOd,EAAW,cACtD0U,EAAOC,EAAQW,cAAc,IAAIxU,OAAOd,EAAW,UACvDrK,KAAK6c,UAAYA,EACjB7c,KAAK0D,QAAUA,EACf1D,KAAKyY,OAASA,EACdzY,KAAKwhB,QAAUA,EACfxhB,KAAKgf,QAAUA,EACfhf,KAAKqf,QAAU3b,EAAQic,cAAc,IAAIxU,OAAOd,EAAW,cAC3DrK,KAAK+e,KAAOA,EACZtG,EAAO6G,YAAYvI,GAEnB1H,GAASP,EAASzD,GAElBwR,EAAUgK,aAAanjB,EAASoL,EAAQgY,aAEnC9mB,KAAKojB,OACR3T,GAAYsH,EAAOzL,GAGrBtL,KAAKkf,cACLlf,KAAKugB,OACLla,EAAQvF,mBAAqB4N,KAAKsK,IAAI,EAAG3S,EAAQvF,qBAAuBsM,IACxE/G,EAAQtF,YAAc2N,KAAKsK,IAAI,EAAG3S,EAAQtF,cAAgBqM,IAC1D/G,EAAQ1F,SAAW+N,KAAKsK,IAAI,EAAGtK,KAAKqK,IAAI,EAAGrK,KAAKC,MAAMtI,EAAQ1F,aAAe,EAC7E0O,GAAS2P,EAAS3T,GAEbhF,EAAQ7E,QACX6N,GAAS2P,EAAQyI,uBAAuB,GAAGtc,OAAOd,EAAW,YAAagB,GAGvEhF,EAAQ5E,QACX4N,GAAS2P,EAAQyI,uBAAuB,GAAGtc,OAAOd,EAAW,YAAagB,GAGxEhF,EAAQ1E,YACV0N,GAAS3L,EAAS,GAAGyH,OAAOd,EAAW,QAGpChE,EAAQ3E,WACX2N,GAAS0P,EAAMxT,GAGblF,EAAQhE,iBACVgN,GAAS0P,EAAMtT,GACf5F,GAAQkZ,EAAMrT,EAAapB,IAGxBjE,EAAQ/D,mBACX+M,GAAS2P,EAAQyI,uBAAuB,GAAGtc,OAAOd,EAAW,UAAWgB,GACxEgE,GAAS2P,EAAQyI,uBAAuB,GAAGtc,OAAOd,EAAW,WAAYgB,IAG3ErL,KAAKH,SACLG,KAAK8C,OAAQ,EACb9C,KAAKuG,YAAYF,EAAQxF,UAErBwF,EAAQzE,UACV5B,KAAKmD,OAGPnD,KAAK6F,QAAQQ,EAAQrF,MAEjB+M,GAAW1H,EAAQvD,QACrBqO,GAAYrC,EAASpC,EAAarG,EAAQvD,MAAO,CAC/C0N,MAAM,IAIVgB,GAAc1C,EAASpC,MAExB,CACDlJ,IAAK,UACLhF,MAAO,WACAwB,KAAK8C,QAIV9C,KAAK8C,OAAQ,EACb9C,KAAKshB,SACLthB,KAAKggB,eACLhgB,KAAK0D,QAAQkjB,WAAWW,YAAYvnB,KAAK0D,SACzC+L,GAAYzP,KAAK8O,QAASzD,MAE3B,CACD7H,IAAK,WACLhF,MAAO,WACDwB,KAAK8C,OACP9C,KAAK0nB,UACL1nB,KAAK8C,OAAQ,EACb9C,KAAK2c,SAAU,GACN3c,KAAKslB,QACdtlB,KAAKqnB,YAAYlB,OAAS,KAC1BnmB,KAAKslB,QAAS,EACdtlB,KAAK4jB,OAAQ,GACJ5jB,KAAKqlB,WACdrlB,KAAK2lB,IAAIE,QAAU,KACnB7lB,KAAK2lB,IAAIO,SACAlmB,KAAK+W,OACd/W,KAAK2mB,UAQP,CAAC,CACHnjB,IAAK,aACLhF,MAAO,WAEL,OADAgB,OAAO0lB,QAAUD,GACVC,IAOR,CACD1hB,IAAK,cACLhF,MAAO,SAAqB6H,GAC1B6H,GAAOf,GAAUS,GAAcvH,IAAYA,OAIxC6e,EArZkB,GA0Z3B,OAFAhX,GAAOgX,GAAQ9lB,UAAWS,GAAQoB,GAASqf,GAAQiB,GAAUmB,GAAQ7e,IAE9DqhB","file":"js/chunk-17274d24.4d86d1f7.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _cropperjs = require('cropperjs');\n\nvar _cropperjs2 = _interopRequireDefault(_cropperjs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar previewPropType = typeof window === 'undefined' ? [String, Array] : [String, Array, Element, NodeList];\n\nexports.default = {\n  render: function render(h) {\n    return h('div', { style: this.containerStyle }, [h('img', {\n      ref: 'img',\n      attrs: {\n        src: this.src,\n        alt: this.alt || 'image',\n        style: 'max-width: 100%'\n      },\n      on: this.$listeners,\n      style: this.imgStyle\n    })]);\n  },\n\n  props: {\n    containerStyle: Object,\n    src: {\n      type: String,\n      default: ''\n    },\n    alt: String,\n    imgStyle: Object,\n\n    viewMode: Number,\n    dragMode: String,\n    initialAspectRatio: Number,\n    aspectRatio: Number,\n    data: Object,\n    preview: previewPropType,\n    responsive: {\n      type: Boolean,\n      default: true\n    },\n    restore: {\n      type: Boolean,\n      default: true\n    },\n    checkCrossOrigin: {\n      type: Boolean,\n      default: true\n    },\n    checkOrientation: {\n      type: Boolean,\n      default: true\n    },\n    modal: {\n      type: Boolean,\n      default: true\n    },\n    guides: {\n      type: Boolean,\n      default: true\n    },\n    center: {\n      type: Boolean,\n      default: true\n    },\n    highlight: {\n      type: Boolean,\n      default: true\n    },\n    background: {\n      type: Boolean,\n      default: true\n    },\n    autoCrop: {\n      type: Boolean,\n      default: true\n    },\n    autoCropArea: Number,\n    movable: {\n      type: Boolean,\n      default: true\n    },\n    rotatable: {\n      type: Boolean,\n      default: true\n    },\n    scalable: {\n      type: Boolean,\n      default: true\n    },\n    zoomable: {\n      type: Boolean,\n      default: true\n    },\n    zoomOnTouch: {\n      type: Boolean,\n      default: true\n    },\n    zoomOnWheel: {\n      type: Boolean,\n      default: true\n    },\n    wheelZoomRatio: Number,\n    cropBoxMovable: {\n      type: Boolean,\n      default: true\n    },\n    cropBoxResizable: {\n      type: Boolean,\n      default: true\n    },\n    toggleDragModeOnDblclick: {\n      type: Boolean,\n      default: true\n    },\n\n    minCanvasWidth: Number,\n    minCanvasHeight: Number,\n    minCropBoxWidth: Number,\n    minCropBoxHeight: Number,\n    minContainerWidth: Number,\n    minContainerHeight: Number,\n\n    ready: Function,\n    cropstart: Function,\n    cropmove: Function,\n    cropend: Function,\n    crop: Function,\n    zoom: Function\n  },\n  mounted: function mounted() {\n    var _$options$props = this.$options.props,\n        containerStyle = _$options$props.containerStyle,\n        src = _$options$props.src,\n        alt = _$options$props.alt,\n        imgStyle = _$options$props.imgStyle,\n        data = _objectWithoutProperties(_$options$props, ['containerStyle', 'src', 'alt', 'imgStyle']);\n\n    var props = {};\n\n    for (var key in data) {\n      if (this[key] !== undefined) {\n        props[key] = this[key];\n      }\n    }\n\n    this.cropper = new _cropperjs2.default(this.$refs.img, props);\n  },\n\n  methods: {\n    reset: function reset() {\n      return this.cropper.reset();\n    },\n    clear: function clear() {\n      return this.cropper.clear();\n    },\n    initCrop: function initCrop() {\n      return this.cropper.crop();\n    },\n    replace: function replace(url) {\n      var onlyColorChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      return this.cropper.replace(url, onlyColorChanged);\n    },\n    enable: function enable() {\n      return this.cropper.enable();\n    },\n    disable: function disable() {\n      return this.cropper.disable();\n    },\n    destroy: function destroy() {\n      return this.cropper.destroy();\n    },\n    move: function move(offsetX, offsetY) {\n      return this.cropper.move(offsetX, offsetY);\n    },\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n\n      return this.cropper.moveTo(x, y);\n    },\n    relativeZoom: function relativeZoom(ratio, _originalEvent) {\n      return this.cropper.zoom(ratio, _originalEvent);\n    },\n    zoomTo: function zoomTo(ratio, _originalEvent) {\n      return this.cropper.zoomTo(ratio, _originalEvent);\n    },\n    rotate: function rotate(degree) {\n      return this.cropper.rotate(degree);\n    },\n    rotateTo: function rotateTo(degree) {\n      return this.cropper.rotateTo(degree);\n    },\n    scaleX: function scaleX(_scaleX) {\n      return this.cropper.scaleX(_scaleX);\n    },\n    scaleY: function scaleY(_scaleY) {\n      return this.cropper.scaleY(_scaleY);\n    },\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n\n      return this.cropper.scale(scaleX, scaleY);\n    },\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      return this.cropper.getData(rounded);\n    },\n    setData: function setData(data) {\n      return this.cropper.setData(data);\n    },\n    getContainerData: function getContainerData() {\n      return this.cropper.getContainerData();\n    },\n    getImageData: function getImageData() {\n      return this.cropper.getImageData();\n    },\n    getCanvasData: function getCanvasData() {\n      return this.cropper.getCanvasData();\n    },\n    setCanvasData: function setCanvasData(data) {\n      return this.cropper.setCanvasData(data);\n    },\n    getCropBoxData: function getCropBoxData() {\n      return this.cropper.getCropBoxData();\n    },\n    setCropBoxData: function setCropBoxData(data) {\n      return this.cropper.setCropBoxData(data);\n    },\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      return this.cropper.getCroppedCanvas(options);\n    },\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      return this.cropper.setAspectRatio(aspectRatio);\n    },\n    setDragMode: function setDragMode(mode) {\n      return this.cropper.setDragMode(mode);\n    }\n  }\n};","/*!\n * Cropper.js v1.5.7\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2020-05-23T05:23:00.081Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Cropper = factory());\n}(this, (function () { 'use strict';\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER && WINDOW.document.documentElement ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: 200,\n    minContainerHeight: 100,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = _objectSpread2({}, pointers);\n\n    var ratios = [];\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        ratios.push(ratio);\n      });\n    });\n    ratios.sort(function (a, b) {\n      return Math.abs(a) < Math.abs(b);\n    });\n    return ratios[0];\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : _objectSpread2({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n        height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      canvasData.left = (containerData.width - canvasWidth) / 2;\n      canvasData.top = (containerData.height - canvasHeight) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      this.initialImageData = assign({}, imageData);\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n          crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        img.alt = alt;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      if (this.disabled) {\n        return;\n      }\n\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // Handle mouse event and pointer event and ignore touch event\n      || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && ( // No primary button (Usually the left button)\n      isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey)) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper = /*#__PURE__*/function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"https://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Detect the mime type of the image directly if it is a Data URL\n\n\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n\n          return;\n        } // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin = element.crossOrigin;\n        var crossOriginUrl = url;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          } // Bust cache when there is not a \"crossOrigin\" property (#519)\n\n\n          crossOriginUrl = addTimestamp(url);\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Most modern browsers (excepts iOS WebKit)\n\n\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n})));\n"],"sourceRoot":""}